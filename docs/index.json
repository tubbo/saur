[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "saur/.external-ecmascript.js",
    "static": true,
    "longname": "saur/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "saur/application/adapter.js",
    "content": "/**\n * Base class for database and caching adapters.\n */\nexport default class Adapter {\n  static adapters = {};\n  static adapt(adapter) {\n    if (!this.adapters[adapter]) {\n      throw new Error(`Database adapter \"${adapter}\" not found`);\n    }\n\n    return this.adapters[adapter];\n  }\n\n  constructor(config = {}) {\n    this.config = config;\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/adapter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "Adapter",
    "memberof": "saur/application/adapter.js",
    "static": true,
    "longname": "saur/application/adapter.js~Adapter",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/adapter.js",
    "importStyle": "Adapter",
    "description": "Base class for database and caching adapters.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 50,
    "kind": "member",
    "name": "adapters",
    "memberof": "saur/application/adapter.js~Adapter",
    "static": true,
    "longname": "saur/application/adapter.js~Adapter.adapters",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "method",
    "name": "adapt",
    "memberof": "saur/application/adapter.js~Adapter",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/application/adapter.js~Adapter.adapt",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "adapter",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/application/adapter.js~Adapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/adapter.js~Adapter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "config",
    "memberof": "saur/application/adapter.js~Adapter",
    "static": false,
    "longname": "saur/application/adapter.js~Adapter#config",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "saur/application/cache.js",
    "content": "import Adapter from \"./adapter.js\";\nimport { connect } from \"https://denopkg.com/keroxp/deno-redis/mod.ts\";\n\nclass Cache extends Adapter {\n  constructor(config = {}) {\n    super(config);\n    this.config = config;\n    this.keys = [];\n    this.initialize();\n    this.contains = this.keys.contains.bind(this.keys);\n  }\n\n  get httpEnabled() {\n    return this.config.enabled && this.config.http.enabled;\n  }\n\n  /**\n   * Fragment caching\n   */\n  fetch(key, options = {}, fresh) {\n    if (this.contains(key)) {\n      return this.readFromCache(key, (options = {}));\n    } else {\n      return this.writeToCache(key, options, fresh());\n    }\n  }\n\n  /**\n   * HTTP caching\n   */\n  http(url, freshen, context, send) {\n    const {\n      http: { expires },\n    } = this.config;\n    const etag = context.response.headers.get(\"ETag\");\n    const json = this.fetch(`${url}|${etag}`, { expires }, () => {\n      freshen();\n\n      const status = context.response.status;\n      const body = context.response.body;\n      let headers = {};\n\n      context.response.headers.forEach((v, h) => (headers[h] = v));\n\n      return JSON.stringify({ status, headers, body });\n    });\n\n    send(JSON.parse(json));\n  }\n\n  readFromCache(key, options = {}) {\n    return this.read(key, options);\n  }\n\n  // Define this in the adapter\n  read() {}\n\n  writeToCache(key, value, options = {}) {\n    if (!this.contains(key)) {\n      this.keys.push(key);\n    }\n    return this.write(key, value, options);\n  }\n\n  // Define this in the adapter\n  write() {}\n}\n\nexport class RedisCache extends Cache {\n  async initialize() {\n    const { hostname, port } = this.config;\n    this.client = await connect({ hostname, port });\n  }\n\n  async read(key) {\n    const value = await this.client.get(key);\n\n    return value;\n  }\n\n  async write(key, value, { expire = null }) {\n    if (expire) {\n      await this.client.setex(key, expire, value);\n    } else {\n      await this.client.set(key, value);\n    }\n\n    return value;\n  }\n}\n\nexport class MemoryCache extends Cache {\n  initialize() {\n    this.data = {};\n  }\n\n  read(key) {\n    return this.data[key];\n  }\n\n  write(key, value) {\n    this.data[key] = value;\n\n    return value;\n  }\n}\n\nCache.adapters = {\n  redis: RedisCache,\n  memory: MemoryCache,\n};\n\nexport default Cache;\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/cache.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "class",
    "name": "RedisCache",
    "memberof": "saur/application/cache.js",
    "static": true,
    "longname": "saur/application/cache.js~RedisCache",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/cache.js",
    "importStyle": "{RedisCache}",
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "interface": false,
    "extends": [
      "Cache"
    ]
  },
  {
    "__docId__": 56,
    "kind": "method",
    "name": "initialize",
    "memberof": "saur/application/cache.js~RedisCache",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "saur/application/cache.js~RedisCache#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "client",
    "memberof": "saur/application/cache.js~RedisCache",
    "static": false,
    "longname": "saur/application/cache.js~RedisCache#client",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "method",
    "name": "read",
    "memberof": "saur/application/cache.js~RedisCache",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "saur/application/cache.js~RedisCache#read",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "write",
    "memberof": "saur/application/cache.js~RedisCache",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "saur/application/cache.js~RedisCache#write",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern2",
        "types": [
          "{\"expire\": *}"
        ],
        "defaultRaw": {
          "expire": null
        },
        "defaultValue": "{\"expire\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 60,
    "kind": "class",
    "name": "MemoryCache",
    "memberof": "saur/application/cache.js",
    "static": true,
    "longname": "saur/application/cache.js~MemoryCache",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/cache.js",
    "importStyle": "{MemoryCache}",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "interface": false,
    "extends": [
      "Cache"
    ]
  },
  {
    "__docId__": 61,
    "kind": "method",
    "name": "initialize",
    "memberof": "saur/application/cache.js~MemoryCache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/cache.js~MemoryCache#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "data",
    "memberof": "saur/application/cache.js~MemoryCache",
    "static": false,
    "longname": "saur/application/cache.js~MemoryCache#data",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "read",
    "memberof": "saur/application/cache.js~MemoryCache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/cache.js~MemoryCache#read",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "write",
    "memberof": "saur/application/cache.js~MemoryCache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/cache.js~MemoryCache#write",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 65,
    "kind": "class",
    "name": "Cache",
    "memberof": "saur/application/cache.js",
    "static": true,
    "longname": "saur/application/cache.js~Cache",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/cache.js",
    "importStyle": "Cache",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false,
    "extends": [
      "saur/application/adapter.js~Adapter"
    ]
  },
  {
    "__docId__": 66,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/application/cache.js~Cache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/cache.js~Cache#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 67,
    "kind": "member",
    "name": "config",
    "memberof": "saur/application/cache.js~Cache",
    "static": false,
    "longname": "saur/application/cache.js~Cache#config",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "keys",
    "memberof": "saur/application/cache.js~Cache",
    "static": false,
    "longname": "saur/application/cache.js~Cache#keys",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "contains",
    "memberof": "saur/application/cache.js~Cache",
    "static": false,
    "longname": "saur/application/cache.js~Cache#contains",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "get",
    "name": "httpEnabled",
    "memberof": "saur/application/cache.js~Cache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/cache.js~Cache#httpEnabled",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "fetch",
    "memberof": "saur/application/cache.js~Cache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/cache.js~Cache#fetch",
    "access": "public",
    "description": "Fragment caching",
    "lineNumber": 20,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "fresh",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "http",
    "memberof": "saur/application/cache.js~Cache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/cache.js~Cache#http",
    "access": "public",
    "description": "HTTP caching",
    "lineNumber": 31,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "freshen",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "send",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 73,
    "kind": "method",
    "name": "readFromCache",
    "memberof": "saur/application/cache.js~Cache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/cache.js~Cache#readFromCache",
    "access": "public",
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "method",
    "name": "read",
    "memberof": "saur/application/cache.js~Cache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/cache.js~Cache#read",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 75,
    "kind": "method",
    "name": "writeToCache",
    "memberof": "saur/application/cache.js~Cache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/cache.js~Cache#writeToCache",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "method",
    "name": "write",
    "memberof": "saur/application/cache.js~Cache",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/cache.js~Cache#write",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "saur/application/database.js",
    "content": "import Adapter from \"./adapter.js\";\nimport * as PostgreSQL from \"https://deno.land/x/postgres/mod.ts\";\nimport * as MySQL from \"https://deno.land/x/mysql/mod.ts\";\n\nexport default class Database extends Adapter {\n  constructor(config = {}) {\n    this.config = config;\n    this.initialize();\n  }\n\n  initialize() {}\n  exec(sql) {}\n}\n\nexport class PostgresAdapter extends Database {\n  initialize() {\n    this.client = new PostgreSQL.Client(this.config);\n  }\n\n  async exec(sql) {\n    App.log.debug(`Running Query \"${sql}\"`);\n\n    await client.connect();\n\n    const result = await this.client.query(sql);\n\n    await client.end();\n\n    return result.rowsOfObjects();\n  }\n}\n\nexport class MysqlAdapter extends Database {\n  initialize() {\n    this.client = new MySQL.Client(this.config);\n  }\n\n  async exec(sql) {\n    App.log.debug(`Running Query \"${sql}\"`);\n\n    await client.connect();\n\n    const result = await this.client.query(sql);\n\n    await client.end();\n\n    return result.rowsOfObjects();\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/database.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "class",
    "name": "Database",
    "memberof": "saur/application/database.js",
    "static": true,
    "longname": "saur/application/database.js~Database",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/database.js",
    "importStyle": "Database",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "saur/application/adapter.js~Adapter"
    ]
  },
  {
    "__docId__": 79,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/application/database.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/database.js~Database#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "config",
    "memberof": "saur/application/database.js~Database",
    "static": false,
    "longname": "saur/application/database.js~Database#config",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "initialize",
    "memberof": "saur/application/database.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/database.js~Database#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "exec",
    "memberof": "saur/application/database.js~Database",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/database.js~Database#exec",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "sql",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 83,
    "kind": "class",
    "name": "PostgresAdapter",
    "memberof": "saur/application/database.js",
    "static": true,
    "longname": "saur/application/database.js~PostgresAdapter",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/database.js",
    "importStyle": "{PostgresAdapter}",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "interface": false,
    "extends": [
      "Database"
    ]
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "initialize",
    "memberof": "saur/application/database.js~PostgresAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/database.js~PostgresAdapter#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "member",
    "name": "client",
    "memberof": "saur/application/database.js~PostgresAdapter",
    "static": false,
    "longname": "saur/application/database.js~PostgresAdapter#client",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "exec",
    "memberof": "saur/application/database.js~PostgresAdapter",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "saur/application/database.js~PostgresAdapter#exec",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "sql",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 87,
    "kind": "class",
    "name": "MysqlAdapter",
    "memberof": "saur/application/database.js",
    "static": true,
    "longname": "saur/application/database.js~MysqlAdapter",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/database.js",
    "importStyle": "{MysqlAdapter}",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "interface": false,
    "extends": [
      "Database"
    ]
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "initialize",
    "memberof": "saur/application/database.js~MysqlAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application/database.js~MysqlAdapter#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "client",
    "memberof": "saur/application/database.js~MysqlAdapter",
    "static": false,
    "longname": "saur/application/database.js~MysqlAdapter#client",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "exec",
    "memberof": "saur/application/database.js~MysqlAdapter",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "saur/application/database.js~MysqlAdapter#exec",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "sql",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "saur/application/defaults.js",
    "content": "import { renderFile } from \"https://deno.land/x/dejs/mod.ts\";\nconst { readFile } = Deno;\n\nexport default {\n  // Whether to force SSL connectivity. This just installs another\n  // middleware into your stack at init time.\n  forceSSL: false,\n\n  // Deno.ListenOptions passed to the OAK server\n  server: {\n    port: 3000,\n  },\n\n  // Serve static files\n  serveStaticFiles: true,\n\n  log: {\n    level: \"INFO\",\n    formatter: \"{datetime} [{levelName}] {msg}\",\n  },\n\n  // Database configuration passed to the client, except the `adapter`\n  // which is used to find the database adapter to instantiate.\n  db: {\n    adapter: \"postgres\",\n    host: \"localhost\",\n    port: 5432,\n    username: \"postgres\",\n    password: null,\n  },\n\n  hosts: [],\n\n  contentSecurityPolicy: {},\n  cors: {},\n\n  // Cache configuration passed to the client, except the `enabled` and\n  // `adapter` options which are used to bypass or instantiate the\n  // cache, respectively.\n  cache: {\n    enabled: false,\n    adapter: \"memory\",\n    url: \"redis://localhost:6379\",\n    http: {\n      expires: 900,\n      enabled: false,\n    },\n  },\n\n  // Default environment to \"development\"\n  environment: \"development\",\n\n  mail: {\n    smtp: {\n      hostname: null,\n      username: null,\n      password: null,\n      port: 25,\n    },\n    request: {\n      scheme: \"http\",\n      host: \"example.com\",\n    },\n  },\n\n  template: {\n    // Default layout that will be passed into all controllers. This can\n    // be changed on a controller-by-controller basis by setting the\n    // static property `layout`.\n    layout: \"default\",\n    handlers: {\n      txt: readFile,\n      ejs: renderFile,\n    },\n  },\n\n  assets: {\n    enabled: true,\n    matcher: /\\.(js|css)$/,\n  },\n};\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/defaults.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "readFile",
    "memberof": "saur/application/defaults.js",
    "static": true,
    "longname": "saur/application/defaults.js~readFile",
    "access": "public",
    "export": false,
    "importPath": "saur/saur/application/defaults.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "saur/application/initializers/assets.js",
    "content": "import CompileAssets from \"../middleware/compile-assets.js\";\n\n/**\n * Add a middleware for compiling assets each time they are requested,\n * when enabled in configuration.\n */\nexport default function Assets(app) {\n  if (app.assets.enabled) {\n    app.use(CompileAssets);\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/initializers/assets.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "Assets",
    "memberof": "saur/application/initializers/assets.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/application/initializers/assets.js~Assets",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/initializers/assets.js",
    "importStyle": "Assets",
    "description": "Add a middleware for compiling assets each time they are requested,\nwhen enabled in configuration.",
    "lineNumber": 7,
    "params": [
      {
        "name": "app",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "file",
    "name": "saur/application/initializers/environment-config.js",
    "content": "/**\n * Load configuration from ./config/environment/$env-name.js\n */\nexport default async function EnvironmentConfig(app) {\n  const { environment } = app.config;\n  const envConfigFile = `${app.root}/config/environments/${environment}.js`;\n  const envConfig = await Deno.readFile(envConfigFile);\n  app.config = { ...app.config, ...envConfig };\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/initializers/environment-config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "EnvironmentConfig",
    "memberof": "saur/application/initializers/environment-config.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/application/initializers/environment-config.js~EnvironmentConfig",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/initializers/environment-config.js",
    "importStyle": "EnvironmentConfig",
    "description": "Load configuration from ./config/environment/$env-name.js",
    "lineNumber": 4,
    "params": [
      {
        "name": "app",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "saur/application/initializers/force-ssl.js",
    "content": "import SSLRedirect from \"../middleware/ssl-redirect.js\";\n\nexport default function ForceSSL(app) {\n  if (app.config.forceSSL) {\n    app.use(SSLRedirect);\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/initializers/force-ssl.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "ForceSSL",
    "memberof": "saur/application/initializers/force-ssl.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/application/initializers/force-ssl.js~ForceSSL",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/initializers/force-ssl.js",
    "importStyle": "ForceSSL",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "app",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "saur/application/initializers/logging.js",
    "content": "import * as log from \"https://deno.land/std/log/mod.ts\";\n\n/**\n * Set up the `App.log` object before all other initializers.\n */\nexport default async function Logging(app) {\n  const {\n    log: { level, formatter },\n  } = app.config;\n\n  await log.setup({\n    handlers: {\n      default: new log.handlers.ConsoleHandler(level, { formatter }),\n    },\n    loggers: {\n      default: {\n        level: level,\n        handlers: [\"default\"],\n      },\n    },\n  });\n\n  app.log = log.getLogger();\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/initializers/logging.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "Logging",
    "memberof": "saur/application/initializers/logging.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/application/initializers/logging.js~Logging",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/initializers/logging.js",
    "importStyle": "Logging",
    "description": "Set up the `App.log` object before all other initializers.",
    "lineNumber": 6,
    "params": [
      {
        "name": "app",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "saur/application/initializers/serve-static-files.js",
    "content": "import StaticFilesMiddleware from \"../middleware/static-files.js\";\n\nexport default function ServeStaticFiles(app) {\n  if (app.config.serveStaticFiles) {\n    app.use(StaticFilesMiddleware);\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/initializers/serve-static-files.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "ServeStaticFiles",
    "memberof": "saur/application/initializers/serve-static-files.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/application/initializers/serve-static-files.js~ServeStaticFiles",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/initializers/serve-static-files.js",
    "importStyle": "ServeStaticFiles",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "app",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "saur/application/middleware/authenticity-token.js",
    "content": "import { Hash, encode } from \"https://deno.land/x/checksum/mod.ts\";\n\n/**\n * Generate and verify the authenticity token for each request.\n */\nexport default function AuthenticityToken(context, next) {\n  if (context.request.method === \"GET\") {\n    next();\n    return;\n  }\n\n  const hash = new Hash(\"sha1\");\n  const timestamp = new Date().getTime();\n  const source = `${encode(timestamp)}|${App.secret}`;\n  const digest = hash.digest(source);\n  App.authenticityToken = digest.hex();\n\n  next();\n\n  const token =\n    context.params.authenticity_token ||\n    context.request.headers.get(\"X-Authenticity-Token\");\n\n  if (token !== App.authenticityToken) {\n    throw new Error(`Invalid authenticity token: \"${token}\"`);\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/middleware/authenticity-token.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "AuthenticityToken",
    "memberof": "saur/application/middleware/authenticity-token.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/application/middleware/authenticity-token.js~AuthenticityToken",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/middleware/authenticity-token.js",
    "importStyle": "AuthenticityToken",
    "description": "Generate and verify the authenticity token for each request.",
    "lineNumber": 6,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "saur/application/middleware/compile-assets.js",
    "content": "import { extname } from \"https://deno.land/std/fs/mod.ts\";\n\n/**\n * Run the `App.config.assets.webpack` command when an asset is\n * requested, then serve it.\n */\nexport default async function CompileAssets(context, next) {\n  const ext = extname(context.request.url);\n  const type = ext === \".js\" ? \"text/javascript\" : \"text/css\";\n  const path = `${App.root}/public/${context.request.url}`;\n\n  if (!App.config.assets.formats.contains(type)) {\n    App.log.info(`${type} assets are not compiled, rendering static file`);\n    next();\n  }\n\n  App.log.info(\"Compiling assets...\");\n  try {\n    Deno.run({ cwd: App.root, cmd: [\"yarn\", \"run\", \"webpack\"] });\n  } catch (e) {\n    App.log.error(\"Compilation failed:\", e);\n\n    context.response.status = 500;\n    context.response.body = e.message;\n\n    return;\n  }\n  App.log.info(\"Compilation succeeded!\");\n\n  context.response.status = 200;\n  context.response.body = await Deno.readFile(path);\n  context.response.headers.set(\"Content-Type\", type);\n\n  App.log.info(`Rendered ${context.request.url} from compiled assets`);\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/middleware/compile-assets.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "CompileAssets",
    "memberof": "saur/application/middleware/compile-assets.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/application/middleware/compile-assets.js~CompileAssets",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/middleware/compile-assets.js",
    "importStyle": "CompileAssets",
    "description": "Run the `App.config.assets.webpack` command when an asset is\nrequested, then serve it.",
    "lineNumber": 7,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "saur/application/middleware/content-security-policy.js",
    "content": "export default function ContentSecurityPolicy(context, next) {\n  const { hosts, contentSecurityPolicy } = App.config;\n  const domains = hosts.length ? hosts.join(\" \") : \"\";\n  const policy = reduce(contentSecurityPolicy, (value, key, policy) => {\n    `${policy}; ${key} ${value}`;\n  }, `default-src 'self' ${domains}`);\n\n  context.headers.set(\"Content-Security-Policy\", policy);\n  next();\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/middleware/content-security-policy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "ContentSecurityPolicy",
    "memberof": "saur/application/middleware/content-security-policy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/application/middleware/content-security-policy.js~ContentSecurityPolicy",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/middleware/content-security-policy.js",
    "importStyle": "ContentSecurityPolicy",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "saur/application/middleware/cors.js",
    "content": "export default function CORS(context, next) {\n  const { cors } = App.config;\n\n  if (!cors.length) {\n    next();\n    return;\n  }\n\n  const defaultResource = cors.resources.find((resource) =>\n    resource.path === \"*\"\n  );\n  const matchingResource = cors.resources.find((resource) => (\n    context.request.url.match(resource.path)\n  ));\n  const resource = matchingResource || defaultResource;\n\n  if (!resource) {\n    next();\n    return;\n  }\n\n  const { origins } = cors;\n  const { headers, methods } = resource;\n  const origin = origins.join(\" \");\n\n  context.response.headers.set(\"Access-Control-Allow-Origin\", origin);\n\n  if (headers) {\n    context.response.headers.set(\"Access-Control-Expose-Headers\", headers);\n  }\n\n  if (methods) {\n    context.response.headers.set(\"Access-Control-Allow-Methods\", methods);\n  }\n\n  next();\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/middleware/cors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "CORS",
    "memberof": "saur/application/middleware/cors.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/application/middleware/cors.js~CORS",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/middleware/cors.js",
    "importStyle": "CORS",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "saur/application/middleware/logger.js",
    "content": "import reduce from \"https://deno.land/x/lodash/reduce.js\";\n\nexport default async function logger(ctx, next) {\n  const { method, url } = ctx.request;\n  const params = reduce(\n    ctx.params || {},\n    (value, key, p) => `${p}, ${key}: \"${value}\"`,\n    \"\",\n  );\n\n  App.log.info(`Requesting ${method} \"${url}\" (Parameters: {${params}})`);\n\n  await next();\n\n  const time = ctx.response.headers.get(\"X-Response-Time\");\n  const status = ctx.response.status || 404;\n\n  App.log.info(`Responded with ${status} in ${time}`);\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/middleware/logger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "logger",
    "memberof": "saur/application/middleware/logger.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/application/middleware/logger.js~logger",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/middleware/logger.js",
    "importStyle": "logger",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "saur/application/middleware/method-override.js",
    "content": "export default function MethodOverride(context, next) {\n  if (context.params._method) {\n    context.request.method = context.params._method;\n  }\n\n  next();\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/middleware/method-override.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "MethodOverride",
    "memberof": "saur/application/middleware/method-override.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/application/middleware/method-override.js~MethodOverride",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/middleware/method-override.js",
    "importStyle": "MethodOverride",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "saur/application/middleware/missing-route.js",
    "content": "export default async function MissingRoute(context, next) {\n  if (!context.response.body) {\n    context.response.body = `No route matches ${context.request.url}`;\n    context.response.status = 404;\n  }\n\n  App.log.warning(`No route matches ${context.request.url}`);\n\n  await next();\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/middleware/missing-route.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "MissingRoute",
    "memberof": "saur/application/middleware/missing-route.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/application/middleware/missing-route.js~MissingRoute",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/middleware/missing-route.js",
    "importStyle": "MissingRoute",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "saur/application/middleware/oak-cache.js",
    "content": "import each from \"https://deno.land/x/lodash/each.js\";\n\n/**\n * Read the response from the cache if it exists, otherwise write the\n * response to the cache.\n */\nexport default function OakCache(ctx, next) {\n  const shouldHTTPCache =\n    App.cache.httpEnabled &&\n    ctx.response.method === \"GET\" &&\n    ctx.response.headers.has(\"Cache-Control\") &&\n    ctx.response.headers.has(\"ETag\");\n  const hit = ({ status, headers, body }) => {\n    each(headers, (v, h) => ctx.response.headers.set(h, v));\n    ctx.response.status = status;\n    ctx.response.body = body;\n  };\n\n  if (shouldHTTPCache) {\n    App.cache.http(ctx.request.url, next, ctx, hit);\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/middleware/oak-cache.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "OakCache",
    "memberof": "saur/application/middleware/oak-cache.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/application/middleware/oak-cache.js~OakCache",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/middleware/oak-cache.js",
    "importStyle": "OakCache",
    "description": "Read the response from the cache if it exists, otherwise write the\nresponse to the cache.",
    "lineNumber": 7,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "saur/application/middleware/ssl-redirect.js",
    "content": "/**\n * Redirect all insecure requests to HTTPS\n */\nexport default function* SSLRedirect(next) {\n  if (this.secure) {\n    return yield next;\n  }\n\n  const host = this.request.header.host;\n  const path = this.request.url;\n  const url = `https://${host}/${path}`;\n\n  this.response.status = 301;\n\n  this.response.redirect(url);\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/middleware/ssl-redirect.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "SSLRedirect",
    "memberof": "saur/application/middleware/ssl-redirect.js",
    "generator": true,
    "async": false,
    "static": true,
    "longname": "saur/application/middleware/ssl-redirect.js~SSLRedirect",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/middleware/ssl-redirect.js",
    "importStyle": "SSLRedirect",
    "description": "Redirect all insecure requests to HTTPS",
    "lineNumber": 4,
    "params": [
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "saur/application/middleware/static-files.js",
    "content": "import { send } from \"https://deno.land/x/oak/mod.ts\";\n\n/**\n * Serve static files from the ./public directory.\n */\nexport default async function StaticFiles(context) {\n  const root = `${Deno.cwd()}/public`;\n\n  await send(context, context.request.path, { root, index: \"index.html\" });\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/middleware/static-files.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "StaticFiles",
    "memberof": "saur/application/middleware/static-files.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/application/middleware/static-files.js~StaticFiles",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/middleware/static-files.js",
    "importStyle": "StaticFiles",
    "description": "Serve static files from the ./public directory.",
    "lineNumber": 6,
    "params": [
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 123,
    "kind": "file",
    "name": "saur/application/middleware/timing.js",
    "content": "export default async function (ctx, next) {\n  const start = Date.now();\n  await next();\n  const ms = Date.now() - start;\n  ctx.response.headers.set(\"X-Response-Time\", `${ms}ms`);\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application/middleware/timing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "timing",
    "memberof": "saur/application/middleware/timing.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/application/middleware/timing.js~timing",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application/middleware/timing.js",
    "importStyle": "timing",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "ctx",
        "types": [
          "*"
        ]
      },
      {
        "name": "next",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "saur/application.js",
    "content": "import * as path from \"https://deno.land/std/path/mod.ts\";\nimport { Application as Oak } from \"https://deno.land/x/oak/mod.ts\";\nimport Routes from \"./routes.js\";\nimport Database from \"./application/database.js\";\nimport Cache from \"./application/cache.js\";\nimport DEFAULTS from \"./application/defaults.js\";\n\nimport RequestLogger from \"./application/middleware/logger.js\";\nimport RequestTimer from \"./application/middleware/timing.js\";\n\nimport ServeStaticFiles from \"./application/initializers/serve-static-files.js\";\nimport ForceSSL from \"./application/initializers/force-ssl.js\";\nimport EnvironmentConfig from \"./application/initializers/environment-config.js\";\nimport Assets from \"./application/initializers/assets.js\";\nimport Logging from \"./application/initializers/logging.js\";\n\nimport MethodOverride from \"./application/middleware/method-override.js\";\nimport CSP from \"./application/middleware/content-security-policy.js\";\nimport CORS from \"./application/middleware/cors.js\";\nimport AuthenticityToken from \"./application/middleware/authenticity-token.js\";\nimport MissingRoute from \"./application/middleware/missing-route.js\";\n\nexport default class Application {\n  constructor(config = {}) {\n    this.config = { ...DEFAULTS, ...config };\n    this.oak = new Oak();\n    this.routes = new Routes();\n    this.use = this.oak.use.bind(this.oak);\n    this.root = path.resolve(this.config.root || Deno.cwd());\n    this.initializers = [];\n\n    this.initialize(Logging);\n    this.initialize(EnvironmentConfig);\n    this.initialize(ServeStaticFiles);\n    this.initialize(Assets);\n    this.iniitalize(ForceSSL);\n\n    this.use(RequestLogger);\n    this.use(RequestTimer);\n    this.use(MethodOverride);\n    this.use(AuthenticityToken);\n    this.use(CSP);\n    this.use(CORS);\n    this.use(Assets);\n  }\n\n  /**\n   * Run the code given in the callback when the app initializes.\n   */\n  initializer(init) {\n    this.initializers.push(init);\n  }\n\n  /**\n   * Run all initializers for the application.\n   */\n  initialize() {\n    this.initializers.forEach(async (init) => {\n      await init(this);\n    });\n  }\n\n  /**\n   * Apply routing and start the application server.\n   */\n  async start() {\n    this.log.info(`Starting server on port ${this.config.server.port}`);\n\n    this.use(this.routes.all);\n    this.use(this.routes.methods);\n    this.use(MissingRoute);\n\n    await this.oak.listen(this.config.server);\n  }\n\n  /**\n   * Database connection for the application.\n   */\n  get db() {\n    const Adapter = Database.adapt(this.config.db.adapter);\n\n    return new Adapter(this.config.db);\n  }\n\n  /**\n   * Cache database connection for the application.\n   */\n  get cache() {\n    const Adapter = Cache.adapt(this.config.cache.adapter);\n\n    return new Adapter(this.config.cache);\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/application.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "class",
    "name": "Application",
    "memberof": "saur/application.js",
    "static": true,
    "longname": "saur/application.js~Application",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/application.js",
    "importStyle": "Application",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 127,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application.js~Application#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "config",
    "memberof": "saur/application.js~Application",
    "static": false,
    "longname": "saur/application.js~Application#config",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "{...DEFAULTS: Object, ...config: Object}"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "oak",
    "memberof": "saur/application.js~Application",
    "static": false,
    "longname": "saur/application.js~Application#oak",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "routes",
    "memberof": "saur/application.js~Application",
    "static": false,
    "longname": "saur/application.js~Application#routes",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "use",
    "memberof": "saur/application.js~Application",
    "static": false,
    "longname": "saur/application.js~Application#use",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "root",
    "memberof": "saur/application.js~Application",
    "static": false,
    "longname": "saur/application.js~Application#root",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "initializers",
    "memberof": "saur/application.js~Application",
    "static": false,
    "longname": "saur/application.js~Application#initializers",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "initializer",
    "memberof": "saur/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application.js~Application#initializer",
    "access": "public",
    "description": "Run the code given in the callback when the app initializes.",
    "lineNumber": 50,
    "params": [
      {
        "name": "init",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "initialize",
    "memberof": "saur/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application.js~Application#initialize",
    "access": "public",
    "description": "Run all initializers for the application.",
    "lineNumber": 57,
    "params": [],
    "return": null
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "start",
    "memberof": "saur/application.js~Application",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "saur/application.js~Application#start",
    "access": "public",
    "description": "Apply routing and start the application server.",
    "lineNumber": 66,
    "params": [],
    "return": null
  },
  {
    "__docId__": 137,
    "kind": "get",
    "name": "db",
    "memberof": "saur/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application.js~Application#db",
    "access": "public",
    "description": "Database connection for the application.",
    "lineNumber": 79,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "get",
    "name": "cache",
    "memberof": "saur/application.js~Application",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/application.js~Application#cache",
    "access": "public",
    "description": "Cache database connection for the application.",
    "lineNumber": 88,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "saur/cli/generate/controller.js",
    "content": "import GenerateTemplate from \"./template.js\";\nimport { renderFile } from \"https://deno.land/x/dejs/mod.ts\";\n\n/**\n * `saur generate controller NAME`\n *\n * This generates a controller class and its test.\n */\nexport default async function (name, klass, encoder, ...actions) {\n  const className = `${klass}Controller`;\n  const methods = actions.map((action) => `  ${action}() {}`).join(\"\\n\");\n  const context = { name, className, methods };\n  const controller = await renderFile(\"./cli/generate/templates/controller.ejs\", context);\n  const test = await renderFile(\"./cli/generate/templates/test.ejs\", context);\n\n  await Deno.writeFile(`controllers/${name}.js`, encoder.encode(controller));\n  await Deno.writeFile(\n    `tests/controllers/${name}_test.js`,\n    encoder.encode(test)\n  );\n  console.log(`Created ${className} in controllers/${name}.js`);\n\n  actions.forEach((action) => GenerateTemplate(`${name}/${action}`));\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/generate/controller.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "controller",
    "memberof": "saur/cli/generate/controller.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/cli/generate/controller.js~controller",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/cli/generate/controller.js",
    "importStyle": "controller",
    "description": "`saur generate controller NAME`\n\nThis generates a controller class and its test.",
    "lineNumber": 9,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "klass",
        "types": [
          "*"
        ]
      },
      {
        "name": "encoder",
        "types": [
          "*"
        ]
      },
      {
        "name": "actions",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "saur/cli/generate/mailer.js",
    "content": "import { renderFile } from \"https://deno.land/x/dejs/mod.ts\";\n\n/**\n * `saur generate controller NAME`\n *\n * This generates a controller class and its test.\n */\nexport default async function (name, className, encoder, ...actions) {\n  const methods = actions.map((action) => `  ${action}() {}`).join(\"\\n\");\n  const context = { name, className, methods };\n  const controller = await renderFile(\n    \"./cli/generate/templates/mailer.ejs\",\n    context\n  );\n  const test = await renderFile(\"./cli/generate/templates/test.ejs\", context);\n\n  await Deno.writeFile(`mailers/${name}.js`, encoder.encode(controller));\n  await Deno.writeFile(`tests/mailers/${name}_test.js`, encoder.encode(test));\n  console.log(`Created ${className} in controllers/${name}.js`);\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/generate/mailer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "mailer",
    "memberof": "saur/cli/generate/mailer.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/cli/generate/mailer.js~mailer",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/cli/generate/mailer.js",
    "importStyle": "mailer",
    "description": "`saur generate controller NAME`\n\nThis generates a controller class and its test.",
    "lineNumber": 8,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "className",
        "types": [
          "*"
        ]
      },
      {
        "name": "encoder",
        "types": [
          "*"
        ]
      },
      {
        "name": "actions",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "saur/cli/generate/migration.js",
    "content": "import { renderFile } from \"https://deno.land/x/dejs/mod.ts\";\n\nfunction statementize(field) {\n  let [name, type, ...options] = field.split(\":\");\n  type = type || \"string\";\n\n  if (options.length) {\n    options = options.map((option) => `${option}: true`).join(\", \");\n\n    return `${name}: { type: \"${type}\", ${options} },`;\n  }\n\n  return `{ ${name}: \"${type}\" }`;\n}\n\nconst ACTIONS = [\"create\", \"drop\"];\n\nexport default async function (name, className, encoder, ...fields) {\n  const version = new Date().getTime();\n  const path = `migrations/${version}_${name}.js`;\n  const statements = fields.map(statementize);\n  const splitName = name.split(\"-\");\n  const action = ACTIONS.contains(splitName[0]) ? splitName[0] : \"update\";\n  const tableName = splitName[splitName.length];\n  const context = { className, statements, tableName };\n  const template = `./cli/generate/templates/migration/${action}.ejs`;\n  const source = await renderFile(template, context);\n\n  await Deno.writeFile(path, encoder.encode(source));\n  console.log(\"Created new migration\", className, \"in\", path);\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/generate/migration.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "function",
    "name": "statementize",
    "memberof": "saur/cli/generate/migration.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/cli/generate/migration.js~statementize",
    "access": "public",
    "export": false,
    "importPath": "saur/saur/cli/generate/migration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "field",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "ACTIONS",
    "memberof": "saur/cli/generate/migration.js",
    "static": true,
    "longname": "saur/cli/generate/migration.js~ACTIONS",
    "access": "public",
    "export": false,
    "importPath": "saur/saur/cli/generate/migration.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "function",
    "name": "migration",
    "memberof": "saur/cli/generate/migration.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/cli/generate/migration.js~migration",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/cli/generate/migration.js",
    "importStyle": "migration",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "className",
        "types": [
          "*"
        ]
      },
      {
        "name": "encoder",
        "types": [
          "*"
        ]
      },
      {
        "name": "fields",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "saur/cli/generate/model.js",
    "content": "import GenerateMigration from \"./migration.js\";\nimport { renderFile } from \"https://deno.land/x/dejs/mod.ts\";\n\nexport default async function (name, className, encoder, ...fields) {\n  const context = { name, className };\n  const model = await renderFile(\"./cli/generate/templates/model.ejs\", context);\n  const test = await renderFile(\"./cli/generate/templates/test.ejs\", context);\n\n  Deno.writeFileSync(`models/${name}.js`, encoder.encode(model));\n  Deno.writeFileSync(`tests/models/${name}_test.js`, encoder.encode(test));\n  console.log(`Created new model ${className} in models/${name}.js`);\n\n  if (fields.length) {\n    GenerateMigration(`create_${name}s`, `Create${name}s`, ...fields);\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/generate/model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "function",
    "name": "model",
    "memberof": "saur/cli/generate/model.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/cli/generate/model.js~model",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/cli/generate/model.js",
    "importStyle": "model",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "className",
        "types": [
          "*"
        ]
      },
      {
        "name": "encoder",
        "types": [
          "*"
        ]
      },
      {
        "name": "fields",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "saur/cli/generate/template.js",
    "content": "export default async function GenerateTemplate(name, className, encoder) {\n  const template = `<h1>hello world</h1>`;\n\n  await Deno.writeFile(`templates/${name}.ejs`, encoder.encode(template));\n\n  console.log(`Created templates/${name}.ejs`);\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/generate/template.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "function",
    "name": "GenerateTemplate",
    "memberof": "saur/cli/generate/template.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/cli/generate/template.js~GenerateTemplate",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/cli/generate/template.js",
    "importStyle": "GenerateTemplate",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "className",
        "types": [
          "*"
        ]
      },
      {
        "name": "encoder",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "saur/cli/generate/templates/env-config.js",
    "content": "export default {\n  // Place your environment-specific configuration here. Settings\n  // defined here will override those specified in the main `index.js`.\n};\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/generate/templates/env-config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "file",
    "name": "saur/cli/generate/test.js",
    "content": "export default function Test(name, className, encoder) {\n  const test = `import { assert } from \"https://deno.land/std/testing/asserts.ts\"\n\n  Deno.test(\"${className}\", () => {\n    assert(true)\n  })\n  `;\n\n  Deno.writeFileSync(`tests/${name}.js`, encoder.encode(test));\n  console.log(`Created test for ${className} in tests/${name}.js`);\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/generate/test.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 153,
    "kind": "function",
    "name": "Test",
    "memberof": "saur/cli/generate/test.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/cli/generate/test.js~Test",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/cli/generate/test.js",
    "importStyle": "Test",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "className",
        "types": [
          "*"
        ]
      },
      {
        "name": "encoder",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 154,
    "kind": "file",
    "name": "saur/cli/generate/view.js",
    "content": "import { renderFile } from \"https://deno.land/x/dejs/mod.ts\";\n\nexport default async function GenerateView(name, klass, encoder) {\n  const className = `${klass}View`;\n  const view = await renderFile(\"./cli/generate/templates/view.ejs\", {\n    className,\n  });\n\n  await Deno.writeFile(`views/${name}.js`, encoder.encode(view));\n  console.log(`Created ${className} in views/${name}.js`);\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/generate/view.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "GenerateView",
    "memberof": "saur/cli/generate/view.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/cli/generate/view.js~GenerateView",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/cli/generate/view.js",
    "importStyle": "GenerateView",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "klass",
        "types": [
          "*"
        ]
      },
      {
        "name": "encoder",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "saur/cli/generate.js",
    "content": "import GenerateModel from \"./generate/model.js\";\nimport GenerateController from \"./generate/controller.js\";\nimport GenerateView from \"./generate/view.js\";\nimport GenerateTemplate from \"./generate/template.js\";\nimport pascalCase from \"https://deno.land/x/case/pascalCase.ts\";\n\n/**\n * The `saur generate` command is used to generate boilerplate code for\n * you to edit later.\n */\nexport default function Generate(type, name, ...args) {\n  const className = pascalCase(name);\n  const USAGE =\n    \"Usage: saur generate [model|view|controller|template|help] NAME [OPTIONS]\";\n  const encoder = new TextEncoder();\n\n  switch (type) {\n    case \"model\":\n      GenerateModel(name, className, encoder, ...args);\n      break;\n    case \"controller\":\n      GenerateController(name, className, encoder, ...args);\n      break;\n    case \"view\":\n      GenerateView(name, className, encoder, ...args);\n      GenerateTemplate(name, className, encoder, ...args);\n      break;\n    case \"template\":\n      GenerateTemplate(name, className, encoder, ...args);\n      break;\n    case \"resource\":\n      GenerateModel(name, className, encoder, ...args);\n      GenerateController(name, className, encoder, ...args);\n      break;\n    default:\n      console.log(\"Invalid generator\", type);\n      console.log(USAGE);\n      Deno.exit(1);\n      break;\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/generate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "function",
    "name": "Generate",
    "memberof": "saur/cli/generate.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/cli/generate.js~Generate",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/cli/generate.js",
    "importStyle": "Generate",
    "description": "The `saur generate` command is used to generate boilerplate code for\nyou to edit later.",
    "lineNumber": 11,
    "params": [
      {
        "name": "type",
        "types": [
          "*"
        ]
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "saur/cli/migrate.js",
    "content": "import { walkSync } from \"https://deno.land/std/path/fs.ts\";\n\nexport default async function Migrate(direction = \"up\") {\n  await import(\"./index.js\");\n\n  for (const { path } of walkSync(`${Deno.cwd()}/migrations/*.js`)) {\n    const [version, name] = path.split(\"_\");\n    const Migration = await import(path);\n    const migration = new Migration(name, version, App.db);\n\n    if (!migration.executed) {\n      migration.exec(direction);\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/migrate.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "Migrate",
    "memberof": "saur/cli/migrate.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/cli/migrate.js~Migrate",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/cli/migrate.js",
    "importStyle": "Migrate",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "params": [
      {
        "name": "direction",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "up",
        "defaultValue": "up"
      }
    ],
    "return": null
  },
  {
    "__docId__": 160,
    "kind": "file",
    "name": "saur/cli/new.js",
    "content": "// import { titleCase } from \"https://deno.land/x/case/mod.ts\";\n// import { renderFile } from \"https://deno.land/x/dejs/mod.ts\";\n\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\n\nexport default async function New(name) {\n  let errors;\n  let command;\n\n  try {\n    // const title = titleCase(name);\n    const app = await Deno.readFile(\"./cli/generate/templates/application.js\");\n    const server = await Deno.readFile(\"./cli/generate/templates/server.js\");\n    const layout = \"\"; //await renderFile(\"./cli/generate/templates/layout.ejs\", {\n    //title,\n    //});\n    const env = await Deno.readFile(\"./cli/generate/templates/env-config.js\");\n\n    console.log(`Creating new application '${name}'...`);\n\n    await Deno.mkdir(name);\n    await Deno.mkdir(`${name}/bin`);\n    await Deno.mkdir(`${name}/controllers`);\n    await Deno.mkdir(`${name}/config`);\n    await Deno.mkdir(`${name}/config/environments`);\n    await Deno.mkdir(`${name}/models`);\n    await Deno.mkdir(`${name}/mailers`);\n    await Deno.mkdir(`${name}/templates`);\n    await Deno.mkdir(`${name}/tests`);\n    await Deno.mkdir(`${name}/tests/controllers`);\n    await Deno.mkdir(`${name}/tests/models`);\n    await Deno.mkdir(`${name}/tests/mailers`);\n    await Deno.mkdir(`${name}/tests/views`);\n    await Deno.mkdir(`${name}/views`);\n    await Deno.mkdir(`${name}/src`);\n    await Deno.writeFile(\n      `${name}/index.js`,\n      encoder.encode(decoder.decode(app))\n    );\n    await Deno.writeFile(\n      `${name}/config/server.js`,\n      encoder.encode(decoder.decode(server))\n    );\n    await Deno.writeFile(\n      `${name}/templates/layout.ejs`,\n      encoder.encode(decoder.decode(layout))\n    );\n    await Deno.writeFile(\n      `${name}/config/environments/development.js`,\n      encoder.encode(decoder.decode(env))\n    );\n    await Deno.writeFile(\n      `${name}/config/environments/test.js`,\n      encoder.encode(decoder.decode(env))\n    );\n    await Deno.writeFile(\n      `${name}/config/environments/production.js`,\n      encoder.encode(decoder.decode(env))\n    );\n    console.log(\"Creating bin/server...\");\n\n    command = Deno.run({\n      cmd: [\n        \"deno\",\n        \"install\",\n        \"--quiet\",\n        \"--allow-read\",\n        \"--allow-write\",\n        \"--allow-net\",\n        \"--dir\",\n        `./${name}/bin`,\n        \"server\",\n        `${name}/config/server.js`,\n      ],\n    });\n\n    console.log(\"Installing frontend dependencies...\");\n    command = Deno.run({ cmd: [\"yarn\", \"init\", \"-yps\"], cwd: name });\n    errors = await command.errors;\n\n    if (!errors) {\n      command = Deno.run({\n        cmd: [\"yarn\", \"add\", \"webpack\", \"prettier\", \"-D\", \"-s\"],\n        cwd: name,\n      });\n      errors = await command.errors;\n      await command.status();\n    }\n\n    if (errors) {\n      throw new Error(`Error installing dependencies: ${errors}`);\n    }\n\n    console.log(`Application '${name}' has been created!`);\n    Deno.exit(0);\n  } catch (e) {\n    console.error(`Application '${name}' failed to create:`);\n    console.error(e);\n    Deno.exit(1);\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/new.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 161,
    "kind": "variable",
    "name": "encoder",
    "memberof": "saur/cli/new.js",
    "static": true,
    "longname": "saur/cli/new.js~encoder",
    "access": "public",
    "export": false,
    "importPath": "saur/saur/cli/new.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "variable",
    "name": "decoder",
    "memberof": "saur/cli/new.js",
    "static": true,
    "longname": "saur/cli/new.js~decoder",
    "access": "public",
    "export": false,
    "importPath": "saur/saur/cli/new.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "New",
    "memberof": "saur/cli/new.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/cli/new.js~New",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/cli/new.js",
    "importStyle": "New",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 164,
    "kind": "file",
    "name": "saur/cli/run.js",
    "content": "/**\n * Execute some JS code in the context of your application.\n */\nexport default async function Run(code) {\n  window.APP_ROOT = `${Deno.cwd()}/example`;\n  window.APP_RUN = true;\n\n  await import(`${window.APP_ROOT}/index.js`);\n  eval(code);\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli/run.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "Run",
    "memberof": "saur/cli/run.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/cli/run.js~Run",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/cli/run.js",
    "importStyle": "Run",
    "description": "Execute some JS code in the context of your application.",
    "lineNumber": 4,
    "params": [
      {
        "name": "code",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "saur/cli.js",
    "content": "const { args } = Deno;\nimport { parse } from \"https://deno.land/std/flags/mod.ts\";\n\nimport New from \"./cli/new.js\";\nimport Generate from \"./cli/generate.js\";\nimport Help from \"./cli/help.js\";\nimport Run from \"./cli/run.js\";\n\nconst {\n  _: [command, ...argv],\n  help,\n} = parse(args);\n\nif (help) {\n  Help(command);\n  Deno.exit(0);\n}\n\nswitch (command) {\n  case \"new\":\n    New(...argv);\n    break;\n  case \"server\":\n    try {\n      Deno.run({ cmd: [\"bin/server\"] });\n    } catch (e) {\n      console.error(\"Server script not found. Are you in a Saur app?\");\n      Deno.exit(1);\n    }\n    break;\n  case \"generate\":\n    Generate(...argv);\n    break;\n  case \"run\":\n    Run(...argv);\n    break;\n  case \"help\":\n    Help(...argv);\n    break;\n  default:\n    Help();\n    break;\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/cli.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "variable",
    "name": "args",
    "memberof": "saur/cli.js",
    "static": true,
    "longname": "saur/cli.js~args",
    "access": "public",
    "export": false,
    "importPath": "saur/saur/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 168,
    "kind": "variable",
    "name": "_",
    "memberof": "saur/cli.js",
    "static": true,
    "longname": "saur/cli.js~_",
    "access": "private",
    "export": false,
    "importPath": "saur/saur/cli.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 169,
    "kind": "file",
    "name": "saur/controller.js",
    "content": "import each from \"https://deno.land/x/lodash/each.js\";\n\nexport default class Controller {\n  /**\n   * Perform a request using an action method on this controller.\n   */\n  static perform(action) {\n    return async (context) => {\n      const controller = new this(context);\n      const handler = controller[action].bind(controller);\n      const params = context.request.params;\n\n      try {\n        const name = `${this}`.split(\" \")[1];\n        App.log.info(`Performing ${name}#${action}`);\n        await handler(params);\n      } catch (e) {\n        App.log.error(e);\n        context.response.body = e.message;\n        context.response.status = 500;\n        context.response.headers.set(\"Content-Type\", \"text/html\");\n      }\n    };\n  }\n\n  constructor(context) {\n    this.request = context.request;\n    this.response = context.response;\n    this.layout = this.constructor.layout || App.config.template.layout;\n    this.status = 200;\n    this.headers = {\n      \"Content-Type\": \"text/html; charset=utf-8\",\n    };\n    this.initialize();\n  }\n\n  initialize() {}\n\n  get actions() {\n    return Object.keys(this).filter(\n      (key) =>\n        typeof this[key] === \"function\" && typeof super[key] === \"undefined\"\n    );\n  }\n\n  /**\n   * Prepare the response for rendering by setting its status and\n   * headers based on the information in the controller.\n   */\n  prepare() {\n    this.response.status = this.status;\n    const bytes = encodeURIComponent(this.response.body).match(/%[89ABab]/g);\n    const length = this.response.body.length + (bytes ? bytes.length : 0);\n    this.headers[\"Content-Length\"] = length;\n\n    each(this.headers, (value, header) =>\n      this.response.headers.set(header, value)\n    );\n  }\n\n  /**\n   * Render the given view's template using an instance as context.\n   */\n  async render(View, context = {}) {\n    const view = new View(this, context);\n    const result = await view.template.render(view);\n    const html = result.toString();\n\n    this.response.body = html;\n    this.headers[\"Content-Type\"] = `text/${view.template.format}`;\n\n    App.log.info(`Rendering template ${view.template.path}`);\n    App.log.info(`Using layout ${view.template.layout}`);\n    this.prepare();\n  }\n\n  /**\n   * Redirect to an entirely new location\n   */\n  redirect(action, options) {\n    const controller = options.controller || this;\n    const params = options.params || {};\n    const url = App.routes.resolve(controller, action, params);\n    this.status = 302;\n    this.headers[\"Location\"] = url;\n    this.response.body = `You are being <a href=\"${url}\">redirected</a>`;\n  }\n\n  head(status) {\n    this.status = status;\n    this.prepare();\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/controller.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 170,
    "kind": "class",
    "name": "Controller",
    "memberof": "saur/controller.js",
    "static": true,
    "longname": "saur/controller.js~Controller",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/controller.js",
    "importStyle": "Controller",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "perform",
    "memberof": "saur/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/controller.js~Controller.perform",
    "access": "public",
    "description": "Perform a request using an action method on this controller.",
    "lineNumber": 7,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 172,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/controller.js~Controller#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "request",
    "memberof": "saur/controller.js~Controller",
    "static": false,
    "longname": "saur/controller.js~Controller#request",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 174,
    "kind": "member",
    "name": "response",
    "memberof": "saur/controller.js~Controller",
    "static": false,
    "longname": "saur/controller.js~Controller#response",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 175,
    "kind": "member",
    "name": "layout",
    "memberof": "saur/controller.js~Controller",
    "static": false,
    "longname": "saur/controller.js~Controller#layout",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "member",
    "name": "status",
    "memberof": "saur/controller.js~Controller",
    "static": false,
    "longname": "saur/controller.js~Controller#status",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "headers",
    "memberof": "saur/controller.js~Controller",
    "static": false,
    "longname": "saur/controller.js~Controller#headers",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "{\"Content-Type\": string}"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "method",
    "name": "initialize",
    "memberof": "saur/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/controller.js~Controller#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 179,
    "kind": "get",
    "name": "actions",
    "memberof": "saur/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/controller.js~Controller#actions",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "method",
    "name": "prepare",
    "memberof": "saur/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/controller.js~Controller#prepare",
    "access": "public",
    "description": "Prepare the response for rendering by setting its status and\nheaders based on the information in the controller.",
    "lineNumber": 50,
    "params": [],
    "return": null
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "render",
    "memberof": "saur/controller.js~Controller",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "saur/controller.js~Controller#render",
    "access": "public",
    "description": "Render the given view's template using an instance as context.",
    "lineNumber": 64,
    "params": [
      {
        "name": "View",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "redirect",
    "memberof": "saur/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/controller.js~Controller#redirect",
    "access": "public",
    "description": "Redirect to an entirely new location",
    "lineNumber": 80,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 184,
    "kind": "method",
    "name": "head",
    "memberof": "saur/controller.js~Controller",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/controller.js~Controller#head",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "status",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 186,
    "kind": "file",
    "name": "saur/errors/missing-route.js",
    "content": "export default class MissingRouteError extends Error {\n  constructor(controller, action, params) {\n    super(\n      `No route matches for\n        controller=${controller}\n        action=${action}\n      with params ${params}`,\n    );\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/errors/missing-route.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 187,
    "kind": "class",
    "name": "MissingRouteError",
    "memberof": "saur/errors/missing-route.js",
    "static": true,
    "longname": "saur/errors/missing-route.js~MissingRouteError",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/errors/missing-route.js",
    "importStyle": "MissingRouteError",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 188,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/errors/missing-route.js~MissingRouteError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/errors/missing-route.js~MissingRouteError#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 189,
    "kind": "file",
    "name": "saur/mailer.js",
    "content": "import { SmtpClient } from \"https://deno.land/x/smtp/mod.ts\";\n\n/**\n * Mailers send HTML-rendered emails to users based on predefined\n * information. They fill the same role as Controllers, except instead\n * of handling the request/response cycle of HTTP, they render their\n * results to an email message. Mailers use the SMTP configuration found\n * in `App.config.smtp` to configure the SMTP client when sending mails,\n * and are capable of rendering Views (and, subsequently, Templates) just\n * like controllers can.\n */\nexport default class Mailer {\n  static layout = \"mailer.ejs\";\n\n  /**\n   * Deliver a given message using the provided args.\n   */\n  static async deliver(message, ...args) {\n    const mailer = new this(App.config.mail);\n    const action = mailer[message].bind(mailer);\n\n    await action(...args);\n  }\n\n  constructor(config = {}) {\n    this.config = config;\n    this.smtp = new SmtpClient();\n  }\n\n  get request() {\n    const { hostname, protocol } = this.config;\n\n    return { hostname, protocol };\n  }\n\n  /**\n   * Compile the given view's template using an instance as context,\n   * then email the rendered HTML given the configuration.\n   */\n  async mail(message = {}, View = null, context = {}) {\n    const to = message.to || message.bcc;\n\n    if (View) {\n      const view = new View(this, context);\n      const result = await view.template.render(view);\n      message.content = result.toString();\n    }\n\n    await this.smtp.connect(this.config.smtp);\n    await this.smtp.send(message);\n    await this.smtp.close();\n\n    App.log.info(`Sent mail to \"${to}\"`);\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/mailer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 190,
    "kind": "class",
    "name": "Mailer",
    "memberof": "saur/mailer.js",
    "static": true,
    "longname": "saur/mailer.js~Mailer",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/mailer.js",
    "importStyle": "Mailer",
    "description": "Mailers send HTML-rendered emails to users based on predefined\ninformation. They fill the same role as Controllers, except instead\nof handling the request/response cycle of HTTP, they render their\nresults to an email message. Mailers use the SMTP configuration found\nin `App.config.smtp` to configure the SMTP client when sending mails,\nand are capable of rendering Views (and, subsequently, Templates) just\nlike controllers can.",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "layout",
    "memberof": "saur/mailer.js~Mailer",
    "static": true,
    "longname": "saur/mailer.js~Mailer.layout",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "deliver",
    "memberof": "saur/mailer.js~Mailer",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "saur/mailer.js~Mailer.deliver",
    "access": "public",
    "description": "Deliver a given message using the provided args.",
    "lineNumber": 18,
    "params": [
      {
        "name": "message",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": null
  },
  {
    "__docId__": 193,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/mailer.js~Mailer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/mailer.js~Mailer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "config",
    "memberof": "saur/mailer.js~Mailer",
    "static": false,
    "longname": "saur/mailer.js~Mailer#config",
    "access": "public",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 195,
    "kind": "member",
    "name": "smtp",
    "memberof": "saur/mailer.js~Mailer",
    "static": false,
    "longname": "saur/mailer.js~Mailer#smtp",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 196,
    "kind": "get",
    "name": "request",
    "memberof": "saur/mailer.js~Mailer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/mailer.js~Mailer#request",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "{\"hostname\": *, \"protocol\": *}"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "mail",
    "memberof": "saur/mailer.js~Mailer",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "saur/mailer.js~Mailer#mail",
    "access": "public",
    "description": "Compile the given view's template using an instance as context,\nthen email the rendered HTML given the configuration.",
    "lineNumber": 40,
    "params": [
      {
        "name": "message",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "View",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      },
      {
        "name": "context",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 198,
    "kind": "file",
    "name": "saur/model/errors.js",
    "content": "export default class Errors {\n  constructor() {\n    this.all = {};\n  }\n\n  add(property, message) {\n    this.all[property] = this.all[property] || [];\n    this.all[property].push(message);\n  }\n\n  get any() {\n    return Object.keys(this.all).length;\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/model/errors.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 199,
    "kind": "class",
    "name": "Errors",
    "memberof": "saur/model/errors.js",
    "static": true,
    "longname": "saur/model/errors.js~Errors",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/model/errors.js",
    "importStyle": "Errors",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 200,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/model/errors.js~Errors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/errors.js~Errors#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "all",
    "memberof": "saur/model/errors.js~Errors",
    "static": false,
    "longname": "saur/model/errors.js~Errors#all",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "add",
    "memberof": "saur/model/errors.js~Errors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/errors.js~Errors#add",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "params": [
      {
        "name": "property",
        "types": [
          "*"
        ]
      },
      {
        "name": "message",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 203,
    "kind": "get",
    "name": "any",
    "memberof": "saur/model/errors.js~Errors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/errors.js~Errors#any",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "saur/model/migration.js",
    "content": "import { Query } from \"https://deno.land/x/sql_builder/mod.ts\";\n\n/**\n * Migration represents a single migration used when defining the\n * database schema. Migrations occur sequentially and the last known\n * version is stored in the DB so they won't be re-run.\n */\nexport default class Migration {\n  constructor(name, version, client) {\n    this.name = name;\n    this.version = parseInt(version);\n    this.query = new Query();\n    this.execute = client.execute.bind(client);\n  }\n\n  /**\n   * Build the query into SQL so it can be executed.\n   */\n  get sql() {\n    return this.query.build();\n  }\n\n  /**\n   * Query for the latest version from the database, and test whether\n   * this version is higher than the one specified by the migration. If\n   * so, this migration was already executed.\n   */\n  get executed() {\n    const query = new Query();\n    const rows = this.execute(\n      query\n        .table(\"schema_migrations\")\n        .select(\"version\")\n        .order(\"version\", \"asc\")\n        .limit(1)\n    );\n    const current = parseInt(rows[0].version);\n\n    return current <= this.version;\n  }\n\n  /**\n   * Run the specified action and execute the built SQL query\n   * afterwards.\n   */\n  exec(direction) {\n    if (this.executed) {\n      return;\n    }\n\n    const action = this[direction];\n\n    action(this.query);\n\n    const value = this.execute(this.sql);\n    const query = new Query();\n\n    this.execute(\n      query.table(\"schema_migrations\").insert(\"version\", this.version).build()\n    );\n\n    return value;\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/model/migration.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "class",
    "name": "Migration",
    "memberof": "saur/model/migration.js",
    "static": true,
    "longname": "saur/model/migration.js~Migration",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/model/migration.js",
    "importStyle": "Migration",
    "description": "Migration represents a single migration used when defining the\ndatabase schema. Migrations occur sequentially and the last known\nversion is stored in the DB so they won't be re-run.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 206,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/model/migration.js~Migration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/migration.js~Migration#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 207,
    "kind": "member",
    "name": "name",
    "memberof": "saur/model/migration.js~Migration",
    "static": false,
    "longname": "saur/model/migration.js~Migration#name",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 208,
    "kind": "member",
    "name": "version",
    "memberof": "saur/model/migration.js~Migration",
    "static": false,
    "longname": "saur/model/migration.js~Migration#version",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "member",
    "name": "query",
    "memberof": "saur/model/migration.js~Migration",
    "static": false,
    "longname": "saur/model/migration.js~Migration#query",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "member",
    "name": "execute",
    "memberof": "saur/model/migration.js~Migration",
    "static": false,
    "longname": "saur/model/migration.js~Migration#execute",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 211,
    "kind": "get",
    "name": "sql",
    "memberof": "saur/model/migration.js~Migration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/migration.js~Migration#sql",
    "access": "public",
    "description": "Build the query into SQL so it can be executed.",
    "lineNumber": 19,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 212,
    "kind": "get",
    "name": "executed",
    "memberof": "saur/model/migration.js~Migration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/migration.js~Migration#executed",
    "access": "public",
    "description": "Query for the latest version from the database, and test whether\nthis version is higher than the one specified by the migration. If\nso, this migration was already executed.",
    "lineNumber": 28,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "exec",
    "memberof": "saur/model/migration.js~Migration",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/migration.js~Migration#exec",
    "access": "public",
    "description": "Run the specified action and execute the built SQL query\nafterwards.",
    "lineNumber": 46,
    "params": [
      {
        "name": "direction",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "saur/model/relation.js",
    "content": "import { Query } from \"https://deno.land/x/sql_builder/mod.ts\";\nimport each from \"https://deno.land/x/lodash/each.ts\";\n\n/**\n * An extension of `SQLBuilder.Query`, Relations are used to both build\n * new queries from fragments and to return the results of that query\n * when it is needed.\n */\nexport default class Relation extends Query {\n  constructor(model) {\n    super();\n    this.model = model;\n    this.table(this.model.table);\n    this.filters = {};\n  }\n\n  /**\n   * Compile this query to SQL.\n   */\n  get sql() {\n    if (!this._fields) {\n      this.select(\"*\");\n    }\n\n    return this.build();\n  }\n\n  /**\n   * Perform the compiled query specified by this object.\n   */\n  run() {\n    const result = App.db.exec(this.sql);\n\n    if (!Array.isArray(result)) {\n      return result;\n    }\n\n    rows.map((row) => new this.model(row));\n  }\n\n  /**\n   * Return the first record in the result set.\n   */\n  get first() {\n    const records = this.run();\n\n    return records[0];\n  }\n\n  /**\n   * Return the last record in the result set.\n   */\n  get last() {\n    const records = this.run();\n\n    return records[records.length];\n  }\n\n  /**\n   * Find the length of all returned records in the result.\n   */\n  get length() {\n    return this.run().length;\n  }\n\n  /**\n   * Perform a SQL COUNT() query with the given parameters and return\n   * the result.\n   */\n  get count() {\n    this.select(\"count(*)\");\n\n    return this.run();\n  }\n\n  /**\n   * Override where() from `SQLBuilder.Query` to save off all filters\n   * specified the object.\n   */\n  where(query = {}, ...context) {\n    if (typeof query === \"string\") {\n      return super.where(query, ...context);\n    }\n\n    this.filters = { ...this.filters, ...query };\n\n    each(query, (value, param) => {\n      if (typeof value === \"function\") {\n        super.where(param, ...value());\n      } else {\n        super.where(param, \"=\", value());\n      }\n    });\n\n    return this;\n  }\n\n  /**\n   * Perform the query and iterate over all of its results.\n   */\n  forEach(iterator) {\n    const records = this.run();\n\n    return records.forEach(iterator);\n  }\n\n  /**\n   * Perform the query and iterate over all of its results, returning a\n   * new Array of each iteration's return value.\n   */\n  map(iterator) {\n    const records = this.run();\n\n    return records.map(iterator);\n  }\n\n  /**\n   * Perform the query and iterate over all of its results, returning a\n   * new memoized object based on the logic performed in each iteration.\n   */\n  reduce(iterator, memo) {\n    const records = this.run();\n\n    return records.reduce(iterator, memo);\n  }\n\n  /**\n   * Perform the query and iterate over all of its results, returning a\n   * new Array containing the records for which the iteration's return\n   * value was truthy.\n   */\n  filter(iterator) {\n    const records = this.run();\n\n    return records.filter(iterator);\n  }\n\n  /**\n   * Perform the query and iterate over all of its results, returning\n   * `true` if the given record exists within it. The record's ID\n   * property is used to evaluate this.\n   */\n  contains(record) {\n    return this.map((record) => record.id).contains(record.id);\n  }\n\n  /**\n   * Create a new model that would appear in this query.\n   */\n  create(attributes = {}) {\n    return this.model.create({ ...attributes, ...this.filters });\n  }\n\n  /**\n   * Instantiate a new model that would appear in this query.\n   */\n  build(attributes = {}) {\n    return new this.model({ ...attributes, ...this.filters });\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/model/relation.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "class",
    "name": "Relation",
    "memberof": "saur/model/relation.js",
    "static": true,
    "longname": "saur/model/relation.js~Relation",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/model/relation.js",
    "importStyle": "Relation",
    "description": "An extension of `SQLBuilder.Query`, Relations are used to both build\nnew queries from fragments and to return the results of that query\nwhen it is needed.",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "https://deno.land/x/sql_builder/mod.ts~Query"
    ]
  },
  {
    "__docId__": 216,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "model",
    "memberof": "saur/model/relation.js~Relation",
    "static": false,
    "longname": "saur/model/relation.js~Relation#model",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "filters",
    "memberof": "saur/model/relation.js~Relation",
    "static": false,
    "longname": "saur/model/relation.js~Relation#filters",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 219,
    "kind": "get",
    "name": "sql",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#sql",
    "access": "public",
    "description": "Compile this query to SQL.",
    "lineNumber": 20,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "run",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#run",
    "access": "public",
    "description": "Perform the compiled query specified by this object.",
    "lineNumber": 31,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 221,
    "kind": "get",
    "name": "first",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#first",
    "access": "public",
    "description": "Return the first record in the result set.",
    "lineNumber": 44,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 222,
    "kind": "get",
    "name": "last",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#last",
    "access": "public",
    "description": "Return the last record in the result set.",
    "lineNumber": 53,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 223,
    "kind": "get",
    "name": "length",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#length",
    "access": "public",
    "description": "Find the length of all returned records in the result.",
    "lineNumber": 62,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 224,
    "kind": "get",
    "name": "count",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#count",
    "access": "public",
    "description": "Perform a SQL COUNT() query with the given parameters and return\nthe result.",
    "lineNumber": 70,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "method",
    "name": "where",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#where",
    "access": "public",
    "description": "Override where() from `SQLBuilder.Query` to save off all filters\nspecified the object.",
    "lineNumber": 80,
    "params": [
      {
        "name": "query",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "context",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "forEach",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#forEach",
    "access": "public",
    "description": "Perform the query and iterate over all of its results.",
    "lineNumber": 101,
    "params": [
      {
        "name": "iterator",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "map",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#map",
    "access": "public",
    "description": "Perform the query and iterate over all of its results, returning a\nnew Array of each iteration's return value.",
    "lineNumber": 111,
    "params": [
      {
        "name": "iterator",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "reduce",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#reduce",
    "access": "public",
    "description": "Perform the query and iterate over all of its results, returning a\nnew memoized object based on the logic performed in each iteration.",
    "lineNumber": 121,
    "params": [
      {
        "name": "iterator",
        "types": [
          "*"
        ]
      },
      {
        "name": "memo",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "filter",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#filter",
    "access": "public",
    "description": "Perform the query and iterate over all of its results, returning a\nnew Array containing the records for which the iteration's return\nvalue was truthy.",
    "lineNumber": 132,
    "params": [
      {
        "name": "iterator",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "contains",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#contains",
    "access": "public",
    "description": "Perform the query and iterate over all of its results, returning\n`true` if the given record exists within it. The record's ID\nproperty is used to evaluate this.",
    "lineNumber": 143,
    "params": [
      {
        "name": "record",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "create",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#create",
    "access": "public",
    "description": "Create a new model that would appear in this query.",
    "lineNumber": 150,
    "params": [
      {
        "name": "attributes",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "build",
    "memberof": "saur/model/relation.js~Relation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/relation.js~Relation#build",
    "access": "public",
    "description": "Instantiate a new model that would appear in this query.",
    "lineNumber": 157,
    "params": [
      {
        "name": "attributes",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 234,
    "kind": "file",
    "name": "saur/model/validations.js",
    "content": "export class Validation {\n  constructor({ property, ...options }) {\n    this.property = property;\n    this.options = options;\n  }\n}\n\nexport class Presence extends Validation {\n  valid(model) {\n    const { property } = this.options;\n    const message = this.options.message || \"must be present\";\n\n    if (typeof model[property] === \"undefined\") {\n      model.errors.add(property, message);\n    }\n  }\n}\n\nexport class GenericValidation extends Validation {\n  valid(model) {\n    const { method } = this.options;\n    const validation = model[method].bind(model);\n\n    validation();\n  }\n}\n\n// Validations that can be used as part of the `validates` method.\nexport default {\n  presence: Presence,\n};\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/model/validations.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 235,
    "kind": "class",
    "name": "Validation",
    "memberof": "saur/model/validations.js",
    "static": true,
    "longname": "saur/model/validations.js~Validation",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/model/validations.js",
    "importStyle": "{Validation}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 236,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/model/validations.js~Validation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/validations.js~Validation#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 237,
    "kind": "member",
    "name": "property",
    "memberof": "saur/model/validations.js~Validation",
    "static": false,
    "longname": "saur/model/validations.js~Validation#property",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "options",
    "memberof": "saur/model/validations.js~Validation",
    "static": false,
    "longname": "saur/model/validations.js~Validation#options",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "class",
    "name": "Presence",
    "memberof": "saur/model/validations.js",
    "static": true,
    "longname": "saur/model/validations.js~Presence",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/model/validations.js",
    "importStyle": "{Presence}",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "interface": false,
    "extends": [
      "Validation"
    ]
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "valid",
    "memberof": "saur/model/validations.js~Presence",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/validations.js~Presence#valid",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 241,
    "kind": "class",
    "name": "GenericValidation",
    "memberof": "saur/model/validations.js",
    "static": true,
    "longname": "saur/model/validations.js~GenericValidation",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/model/validations.js",
    "importStyle": "{GenericValidation}",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "interface": false,
    "extends": [
      "Validation"
    ]
  },
  {
    "__docId__": 242,
    "kind": "method",
    "name": "valid",
    "memberof": "saur/model/validations.js~GenericValidation",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model/validations.js~GenericValidation#valid",
    "access": "public",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 243,
    "kind": "file",
    "name": "saur/model.js",
    "content": "import reduce from \"https://deno.land/x/lodash/reduce.js\";\nimport merge from \"https://deno.land/x/lodash/merge.js\";\nimport each from \"https://deno.land/x/lodash/each.js\";\nimport flatten from \"https://deno.land/x/lodash/flatten.js\";\nimport Validations, { GenericValidation } from \"./model/validations.js\";\nimport Errors from \"./model/errors.js\";\nimport Relation from \"./model/query.js\";\n\n/**\n * Decorator for adding pre-defined validators to a model.\n *\n * @example\n *   import Model, { validates } from \"https://deno.land/x/saur/model.js\";\n *   import { titleCase } from \"https://deno.land/std/case/mod.ts\";\n *\n *   @validates(\"name\", { presence: true })\n *   export default class YourModel extends Model {\n *      get title() {\n *        return titleCase(this.name)\n *      }\n *   }\n * @param string name - Name of the property\n * @param Object validations - Validations to add\n */\nexport function validates(name, validations = {}) {\n  return (target) => target.validates(name, validations);\n}\n\n/**\n * Decorator for adding a custom validator to a model.\n *\n * @example\n *   import Model, { validate } from \"https://deno.land/x/saur/model.js\";\n *\n *   @validate(\"nameNotFoo\");\n *   export default class YourModel extends Model {\n *     nameNotFoo() {\n *       if (this.name === \"foo\") {\n *          this.errors.add(\"name\", \"cannot be foo\");\n *       }\n *     }\n *   }\n * @param string method - Method name to run in validations.\n */\nexport function validate(method) {\n  return (target) => target.validate(method);\n}\n\nexport default class Model {\n  /**\n   * All validations on this model.\n   */\n  static validations = [];\n\n  /**\n   * Table name for this model.\n   */\n  static table = null;\n\n  /**\n   * A macro for creating a new `Validation` object in the list of\n   * validations a model may run through. Call it with\n   * `YourModelName.validates`.\n   *\n   * @param string name - Name of the property\n   * @param Object validations - Validations to add\n   */\n  static validates(name, validations = {}) {\n    each(validations, (options, name) => {\n      const Validation = Validations[name];\n      options = options === true ? {} : options;\n\n      this.validations.push(new Validation(options));\n    });\n  }\n\n  /**\n   * A macro for creating a new `GenericValidation` object, allowing the\n   * validation to consist of just running a method which may or may not\n   * add errors. Call it with `YourModelName.validate`.\n   *\n   * @param string method - Name of the method to call\n   */\n  static validate(method) {\n    this.validations.push(new GenericValidation({ method }));\n  }\n\n  /**\n   * Create a new model record and save it to the database.\n   */\n  static create(attributes = {}) {\n    const model = new this(attributes);\n    model.save();\n    return model;\n  }\n\n  /**\n   * Return a relation representing all records in the database.\n   */\n  static get all() {\n    return new Relation(this);\n  }\n\n  /**\n   * Perform a query for matching models in the database.\n   */\n  static where(query) {\n    return this.all.where(query);\n  }\n\n  /**\n   * Find an existing model record in the database by the given\n   * parameters.\n   */\n  static findBy(query) {\n    return this.where(query).first;\n  }\n\n  /**\n   * Find an existing model record in the database by its ID.\n   */\n  static find(id) {\n    return this.findBy({ id });\n  }\n\n  constructor(attributes = {}) {\n    this.attributes = attributes;\n    this.errors = new Errors();\n    this.initialize();\n  }\n\n  initialize() {}\n\n  /**\n   * All non-function properties of this object.\n   */\n  get attributes() {\n    return reduce(\n      this,\n      (attrs, value, prop) => {\n        if (typeof value !== \"function\") {\n          attrs[prop] = value;\n        }\n\n        return attrs;\n      },\n      {}\n    );\n  }\n\n  /**\n   * Set attributes on this object by assigning properties directly to\n   * it.\n   */\n  set attributes(attrs = {}) {\n    merge(this, attrs);\n  }\n\n  /**\n   * Flatten validators from their method calls.\n   */\n  get validations() {\n    return flatten(this.constructor.validations);\n  }\n\n  /**\n   * Run all configured validators.\n   */\n  get valid() {\n    this.validations.forEach((validation) => validation.valid(this));\n\n    return this.errors.any;\n  }\n\n  /**\n   * Persist the current information in this model to the database.\n   */\n  save() {\n    if (!this.valid) {\n      return false;\n    }\n\n    const query = new Relation(this);\n\n    if (this.id) {\n      query.where(\"id\", this.id).update(this.attributes);\n    } else {\n      query.insert(this.attributes);\n    }\n\n    query.run();\n\n    return true;\n  }\n\n  /**\n   * Set the given attributes on this model and persist.\n   */\n  update(attributes = {}) {\n    this.attributes = attributes;\n\n    return this.save();\n  }\n\n  /**\n   * Remove this model from the database.\n   */\n  destroy() {\n    const query = new Relation(this);\n\n    query.where(\"id\", this.id).delete();\n    query.run();\n\n    return true;\n  }\n\n  /**\n   * Reload this model's information from the database.\n   */\n  reload() {\n    const model = this.constructor.find(this.id);\n\n    merge(this, model.attributes);\n\n    return this;\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/model.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "validates",
    "memberof": "saur/model.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/model.js~validates",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/model.js",
    "importStyle": "{validates}",
    "description": "Decorator for adding pre-defined validators to a model.",
    "examples": [
      "  import Model, { validates } from \"https://deno.land/x/saur/model.js\";\n  import { titleCase } from \"https://deno.land/std/case/mod.ts\";\n\n  @validates(\"name\", { presence: true })\n  export default class YourModel extends Model {\n     get title() {\n       return titleCase(this.name)\n     }\n  }"
    ],
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "name - Name of the property"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "Object",
        "description": "validations - Validations to add"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 245,
    "kind": "function",
    "name": "validate",
    "memberof": "saur/model.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/model.js~validate",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/model.js",
    "importStyle": "{validate}",
    "description": "Decorator for adding a custom validator to a model.",
    "examples": [
      "  import Model, { validate } from \"https://deno.land/x/saur/model.js\";\n\n  @validate(\"nameNotFoo\");\n  export default class YourModel extends Model {\n    nameNotFoo() {\n      if (this.name === \"foo\") {\n         this.errors.add(\"name\", \"cannot be foo\");\n      }\n    }\n  }"
    ],
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "method - Method name to run in validations."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "class",
    "name": "Model",
    "memberof": "saur/model.js",
    "static": true,
    "longname": "saur/model.js~Model",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/model.js",
    "importStyle": "Model",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 247,
    "kind": "member",
    "name": "validations",
    "memberof": "saur/model.js~Model",
    "static": true,
    "longname": "saur/model.js~Model.validations",
    "access": "public",
    "description": "All validations on this model.",
    "lineNumber": 53,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 248,
    "kind": "member",
    "name": "table",
    "memberof": "saur/model.js~Model",
    "static": true,
    "longname": "saur/model.js~Model.table",
    "access": "public",
    "description": "Table name for this model.",
    "lineNumber": 58,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "validates",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/model.js~Model.validates",
    "access": "public",
    "description": "A macro for creating a new `Validation` object in the list of\nvalidations a model may run through. Call it with\n`YourModelName.validates`.",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "name - Name of the property"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "Object",
        "description": "validations - Validations to add"
      }
    ],
    "return": null
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "validate",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/model.js~Model.validate",
    "access": "public",
    "description": "A macro for creating a new `GenericValidation` object, allowing the\nvalidation to consist of just running a method which may or may not\nadd errors. Call it with `YourModelName.validate`.",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "string",
        "description": "method - Name of the method to call"
      }
    ],
    "return": null
  },
  {
    "__docId__": 251,
    "kind": "method",
    "name": "create",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/model.js~Model.create",
    "access": "public",
    "description": "Create a new model record and save it to the database.",
    "lineNumber": 91,
    "params": [
      {
        "name": "attributes",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "get",
    "name": "all",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/model.js~Model.all",
    "access": "public",
    "description": "Return a relation representing all records in the database.",
    "lineNumber": 100,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "where",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/model.js~Model.where",
    "access": "public",
    "description": "Perform a query for matching models in the database.",
    "lineNumber": 107,
    "params": [
      {
        "name": "query",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "findBy",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/model.js~Model.findBy",
    "access": "public",
    "description": "Find an existing model record in the database by the given\nparameters.",
    "lineNumber": 115,
    "params": [
      {
        "name": "query",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 255,
    "kind": "method",
    "name": "find",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/model.js~Model.find",
    "access": "public",
    "description": "Find an existing model record in the database by its ID.",
    "lineNumber": 122,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model.js~Model#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 126,
    "undocument": true
  },
  {
    "__docId__": 258,
    "kind": "member",
    "name": "errors",
    "memberof": "saur/model.js~Model",
    "static": false,
    "longname": "saur/model.js~Model#errors",
    "access": "public",
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "initialize",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model.js~Model#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 132,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 260,
    "kind": "get",
    "name": "attributes",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model.js~Model#attributes",
    "access": "public",
    "description": "All non-function properties of this object.",
    "lineNumber": 137,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "set",
    "name": "attributes",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model.js~Model#attributes",
    "access": "public",
    "description": "Set attributes on this object by assigning properties directly to\nit.",
    "lineNumber": 155
  },
  {
    "__docId__": 262,
    "kind": "get",
    "name": "validations",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model.js~Model#validations",
    "access": "public",
    "description": "Flatten validators from their method calls.",
    "lineNumber": 162,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "get",
    "name": "valid",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model.js~Model#valid",
    "access": "public",
    "description": "Run all configured validators.",
    "lineNumber": 169,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 264,
    "kind": "method",
    "name": "save",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model.js~Model#save",
    "access": "public",
    "description": "Persist the current information in this model to the database.",
    "lineNumber": 178,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "update",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model.js~Model#update",
    "access": "public",
    "description": "Set the given attributes on this model and persist.",
    "lineNumber": 199,
    "params": [
      {
        "name": "attributes",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "destroy",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model.js~Model#destroy",
    "access": "public",
    "description": "Remove this model from the database.",
    "lineNumber": 208,
    "params": [],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "reload",
    "memberof": "saur/model.js~Model",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/model.js~Model#reload",
    "access": "public",
    "description": "Reload this model's information from the database.",
    "lineNumber": 220,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 269,
    "kind": "file",
    "name": "saur/routes/helpers.js",
    "content": "export default class RouteHelpers {\n  constructor(set, request) {\n    this.set = set;\n    this.request = request;\n  }\n\n  get host() {\n    return `${request.protocol}://${request.host}`;\n  }\n\n  forEach(iterator) {\n    this.set.forEach((route) => {\n      const name = camelCase(route.path);\n      const path = (params = {}) => `/${route.path}`;\n\n      iterator({ name, path, url });\n    });\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/routes/helpers.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 270,
    "kind": "class",
    "name": "RouteHelpers",
    "memberof": "saur/routes/helpers.js",
    "static": true,
    "longname": "saur/routes/helpers.js~RouteHelpers",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/routes/helpers.js",
    "importStyle": "RouteHelpers",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 271,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/routes/helpers.js~RouteHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/helpers.js~RouteHelpers#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 272,
    "kind": "member",
    "name": "set",
    "memberof": "saur/routes/helpers.js~RouteHelpers",
    "static": false,
    "longname": "saur/routes/helpers.js~RouteHelpers#set",
    "access": "public",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 273,
    "kind": "member",
    "name": "request",
    "memberof": "saur/routes/helpers.js~RouteHelpers",
    "static": false,
    "longname": "saur/routes/helpers.js~RouteHelpers#request",
    "access": "public",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "get",
    "name": "host",
    "memberof": "saur/routes/helpers.js~RouteHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/helpers.js~RouteHelpers#host",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "forEach",
    "memberof": "saur/routes/helpers.js~RouteHelpers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/helpers.js~RouteHelpers#forEach",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "params": [
      {
        "name": "iterator",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 276,
    "kind": "file",
    "name": "saur/routes/route-set.js",
    "content": "import Route from \"./route.js\";\n/**\n * RouteSet defines the routing DSL used by the top-level application\n * router. It uses `Oak.Router` under the hood, but pre-fills\n * information based on the current context and whether you've selected\n * a controller. Controllers are selected by providing a `resources()`\n * route, and base paths can be selected by themselves by providing a\n * `namespace()`.\n */\nexport default class RouteSet {\n  constructor(router, options = {}) {\n    this.router = router;\n    this.controller = options.controller;\n    this.base = options.base;\n    this.routes = [];\n    this.namespaces = [];\n  }\n\n  /**\n   * Call the function provided and pass in all of the routing methods\n   * contextualized to this particular set. This enables \"relative\"\n   * routing where calling e.g. `get()` within a `namespace()`\n   * will nest the path of the GET request into the namespace itself.\n   */\n  draw(routing) {\n    const get = this.get.bind(this);\n    const post = this.post.bind(this);\n    const put = this.put.bind(this);\n    const patch = this.patch.bind(this);\n    const del = this.delete.bind(this);\n    const resources = this.resources.bind(this);\n    const namespace = this.namespace.bind(this);\n    const root = this.root.bind(this);\n    const use = this.use.bind(this);\n\n    if (this.base) {\n      routing({\n        use,\n        get,\n        post,\n        put,\n        patch,\n        delete: del,\n        resources,\n        namespace,\n      });\n    } else {\n      routing({\n        use,\n        get,\n        post,\n        put,\n        patch,\n        delete: del,\n        resources,\n        namespace,\n        root,\n      });\n    }\n  }\n\n  add({ as, path, controller, action }) {\n    this.routes.push(new Route({ as, path, controller, action }));\n  }\n\n  /**\n   * Route a GET request to the given path. You can also specify a\n   * `controller` and `action`, but these options will default to the\n   * top-level controller (if you're in a `resources()` block) and the\n   * name of the path, respectively.\n   */\n  get(path, options = {}) {\n    const action = options.action || path;\n    const as = options.as || action;\n    const controller = options.controller || this.controller;\n    path = this.base ? `${this.base}/${path}` : path;\n\n    this.add({ as, path, controller, action });\n    this.router.get(path, controller.perform(action));\n  }\n\n  use(middleware) {\n    this.router.use(this.base, middleware);\n  }\n\n  /**\n   * Route a POST request to the given path. You can also specify a\n   * `controller` and `action`, but these options will default to the\n   * top-level controller (if you're in a `resources()` block) and the\n   * name of the path, respectively.\n   */\n\n  post(path, options = {}) {\n    const action = options.action || path;\n    const as = options.as || action;\n    const controller = options.controller || this.controller;\n    path = this.base ? `${this.base}/${path}` : path;\n\n    this.add({ as, path, controller, action });\n    this.router.post(path, controller.perform(action));\n  }\n\n  /**\n   * Route a PUT request to the given path. You can also specify a\n   * `controller` and `action`, but these options will default to the\n   * top-level controller (if you're in a `resources()` block) and the\n   * name of the path, respectively.\n   */\n  put(path, options = {}) {\n    const action = options.action || path;\n    const as = options.as || action;\n    const controller = options.controller || this.controller;\n    path = this.base ? `${this.base}/${path}` : path;\n\n    this.add({ as, path, controller, action });\n    this.router.put(path, controller.perform(action));\n  }\n\n  /**\n   * Route a PATCH request to the given path. You can also specify a\n   * `controller` and `action`, but these options will default to the\n   * top-level controller (if you're in a `resources()` block) and the\n   * name of the path, respectively.\n   */\n  patch(path, options = {}) {\n    const action = options.action || path;\n    const as = options.as || action;\n    const controller = options.controller || this.controller;\n    path = this.base ? `${this.base}/${path}` : path;\n\n    this.add({ as, path, controller, action });\n    this.router.patch(path, controller.perform(action));\n  }\n\n  /**\n   * Route a del request to the given path. You can also specify a\n   * `controller` and `action`, but these options will default to the\n   * top-level controller (if you're in a `resources()` block) and the\n   * name of the path, respectively.\n   */\n  delete(path, options = {}) {\n    const action = options.action || path;\n    const as = options.as || action;\n    const controller = options.controller || this.controller;\n    path = this.base ? `${this.base}/${path}` : path;\n\n    this.add({ as, path, controller, action });\n    this.router.delete(path, controller.perform(action));\n  }\n\n  /**\n   * Define a RouteSet that is nested within this one.\n   */\n  namespace(path, routes) {\n    const controller = this.controller;\n    const base = `${this.base}/${path}`;\n    const set = new RouteSet(this.router, { controller, base });\n    path = this.base ? `${this.base}/${path}` : path;\n\n    this.namespaces.push({ path, controller, base });\n    set.draw(routes);\n  }\n\n  /**\n   * Define the index route to the application. This is always a GET\n   * request.\n   */\n  root(action, controller) {\n    this.add({ path: \"/\", as: \"root\", controller, action });\n    this.get(\"/\", { controller, action });\n  }\n\n  /**\n   * Define a RESTful resource, which contains all\n   * create/read/update/destroy actions as well as new/edit pages. You\n   * can optionally also pass a function in which provides two route\n   * sets of nested resources for the \"collection\" and \"member\" routes.\n   */\n  resources(path, controller, nested) {\n    this.get(path, { controller, action: \"index\" });\n    this.post(path, { controller, action: \"create\" });\n    this.get(`${path}/new`, { controller, action: \"new\" });\n    this.get(`${path}/:id`, { controller, action: \"show\" });\n    this.get(`${path}/:id/edit`, { controller, action: \"edit\" });\n    this.put(`${path}/:id`, { controller, action: \"update\" });\n    this.patch(`${path}/:id`, { controller, action: \"update\" });\n    this.delete(`${path}/:id`, { controller, action: \"destroy\" });\n\n    if (nested) {\n      const cs = new RouteSet(this.router, { controller, base: path });\n      const ms = new RouteSet(this.router, { controller, base: `${path}/:id` });\n      const collection = cs.draw.bind(cs);\n      const member = ms.draw.bind(ms);\n\n      nested({ collection, member });\n    }\n  }\n\n  /**\n   * Mount an application or Oak middleware at the given path.\n   */\n  mount(path, app) {\n    path = this.base ? `${this.base}/${path}` : path;\n\n    if (app.routes) {\n      this.namespace(path, ({ use }) => use(app.routes.all));\n    } else {\n      this.router.use(path, app);\n    }\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/routes/route-set.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 277,
    "kind": "class",
    "name": "RouteSet",
    "memberof": "saur/routes/route-set.js",
    "static": true,
    "longname": "saur/routes/route-set.js~RouteSet",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/routes/route-set.js",
    "importStyle": "RouteSet",
    "description": "RouteSet defines the routing DSL used by the top-level application\nrouter. It uses `Oak.Router` under the hood, but pre-fills\ninformation based on the current context and whether you've selected\na controller. Controllers are selected by providing a `resources()`\nroute, and base paths can be selected by themselves by providing a\n`namespace()`.",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 278,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 279,
    "kind": "member",
    "name": "router",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#router",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 280,
    "kind": "member",
    "name": "controller",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#controller",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "member",
    "name": "base",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#base",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 282,
    "kind": "member",
    "name": "routes",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#routes",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 283,
    "kind": "member",
    "name": "namespaces",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#namespaces",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "draw",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#draw",
    "access": "public",
    "description": "Call the function provided and pass in all of the routing methods\ncontextualized to this particular set. This enables \"relative\"\nrouting where calling e.g. `get()` within a `namespace()`\nwill nest the path of the GET request into the namespace itself.",
    "lineNumber": 25,
    "params": [
      {
        "name": "routing",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "add",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#add",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"as\": *, \"path\": *, \"controller\": *, \"action\": *}"
        ],
        "defaultRaw": {
          "as": null,
          "path": null,
          "controller": null,
          "action": null
        },
        "defaultValue": "{\"as\":null,\"path\":null,\"controller\":null,\"action\":null}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "get",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#get",
    "access": "public",
    "description": "Route a GET request to the given path. You can also specify a\n`controller` and `action`, but these options will default to the\ntop-level controller (if you're in a `resources()` block) and the\nname of the path, respectively.",
    "lineNumber": 72,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "use",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#use",
    "access": "public",
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "middleware",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "post",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#post",
    "access": "public",
    "description": "Route a POST request to the given path. You can also specify a\n`controller` and `action`, but these options will default to the\ntop-level controller (if you're in a `resources()` block) and the\nname of the path, respectively.",
    "lineNumber": 93,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "put",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#put",
    "access": "public",
    "description": "Route a PUT request to the given path. You can also specify a\n`controller` and `action`, but these options will default to the\ntop-level controller (if you're in a `resources()` block) and the\nname of the path, respectively.",
    "lineNumber": 109,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "patch",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#patch",
    "access": "public",
    "description": "Route a PATCH request to the given path. You can also specify a\n`controller` and `action`, but these options will default to the\ntop-level controller (if you're in a `resources()` block) and the\nname of the path, respectively.",
    "lineNumber": 125,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "delete",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#delete",
    "access": "public",
    "description": "Route a del request to the given path. You can also specify a\n`controller` and `action`, but these options will default to the\ntop-level controller (if you're in a `resources()` block) and the\nname of the path, respectively.",
    "lineNumber": 141,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": null
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "namespace",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#namespace",
    "access": "public",
    "description": "Define a RouteSet that is nested within this one.",
    "lineNumber": 154,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "routes",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "root",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#root",
    "access": "public",
    "description": "Define the index route to the application. This is always a GET\nrequest.",
    "lineNumber": 168,
    "params": [
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "controller",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "resources",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#resources",
    "access": "public",
    "description": "Define a RESTful resource, which contains all\ncreate/read/update/destroy actions as well as new/edit pages. You\ncan optionally also pass a function in which provides two route\nsets of nested resources for the \"collection\" and \"member\" routes.",
    "lineNumber": 179,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "controller",
        "types": [
          "*"
        ]
      },
      {
        "name": "nested",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "mount",
    "memberof": "saur/routes/route-set.js~RouteSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route-set.js~RouteSet#mount",
    "access": "public",
    "description": "Mount an application or Oak middleware at the given path.",
    "lineNumber": 202,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "app",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 296,
    "kind": "file",
    "name": "saur/routes/route.js",
    "content": "import camelCase from \"https://deno.land/x/case/camelCase.ts\";\n// import { partial } from \"https://deno.land/x/lodash/lodash.js\";\n\nconst partial = () => \"wtf lodash\";\n\nexport default class Route {\n  constructor({ as, path, controller, action }) {\n    this.name = camelCase(as);\n    this.path = path;\n    this.controller = controller;\n    this.action = action;\n  }\n\n  get urlHelperName() {\n    return `${this.name}URL`;\n  }\n\n  get pathHelperName() {\n    return `${this.name}URL`;\n  }\n\n  /**\n   * A helper method that resolves the route for this controller,\n   * action, and given params, and returns an absolute path to the\n   * resource.\n   */\n  pathHelper(params = {}) {\n    return App.routes.resolve(this.controller, this.action, params);\n  }\n\n  /**\n   * A helper method that resolves the route for this controller,\n   * action, and given params, and returns a fully-qualified URL to the\n   * resource.\n   */\n\n  urlHelper(params = {}, host) {\n    return App.routes.resolve(this.controller, this.action, params, host);\n  }\n\n  /**\n   * Define helper methods on another object instance. This makes routes easier\n   * to access from within templates.\n   */\n  hydrate(instance) {\n    const { protocol, hostname } = instance.request;\n    const host = `${protocol}://${hostname}`;\n\n    instance[this.pathHelperName] = this.pathHelper.bind(this);\n    instance[this.urlHelperName] = partial(this.urlHelper.bind(this), host);\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/routes/route.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "partial",
    "memberof": "saur/routes/route.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/routes/route.js~partial",
    "access": "public",
    "export": false,
    "importPath": "saur/saur/routes/route.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "params": [],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "class",
    "name": "Route",
    "memberof": "saur/routes/route.js",
    "static": true,
    "longname": "saur/routes/route.js~Route",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/routes/route.js",
    "importStyle": "Route",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 299,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/routes/route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route.js~Route#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 300,
    "kind": "member",
    "name": "name",
    "memberof": "saur/routes/route.js~Route",
    "static": false,
    "longname": "saur/routes/route.js~Route#name",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 301,
    "kind": "member",
    "name": "path",
    "memberof": "saur/routes/route.js~Route",
    "static": false,
    "longname": "saur/routes/route.js~Route#path",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "controller",
    "memberof": "saur/routes/route.js~Route",
    "static": false,
    "longname": "saur/routes/route.js~Route#controller",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "action",
    "memberof": "saur/routes/route.js~Route",
    "static": false,
    "longname": "saur/routes/route.js~Route#action",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "get",
    "name": "urlHelperName",
    "memberof": "saur/routes/route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route.js~Route#urlHelperName",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "get",
    "name": "pathHelperName",
    "memberof": "saur/routes/route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route.js~Route#pathHelperName",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "method",
    "name": "pathHelper",
    "memberof": "saur/routes/route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route.js~Route#pathHelper",
    "access": "public",
    "description": "A helper method that resolves the route for this controller,\naction, and given params, and returns an absolute path to the\nresource.",
    "lineNumber": 27,
    "params": [
      {
        "name": "params",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 307,
    "kind": "method",
    "name": "urlHelper",
    "memberof": "saur/routes/route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route.js~Route#urlHelper",
    "access": "public",
    "description": "A helper method that resolves the route for this controller,\naction, and given params, and returns a fully-qualified URL to the\nresource.",
    "lineNumber": 37,
    "params": [
      {
        "name": "params",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "host",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "hydrate",
    "memberof": "saur/routes/route.js~Route",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes/route.js~Route#hydrate",
    "access": "public",
    "description": "Define helper methods on another object instance. This makes routes easier\nto access from within templates.",
    "lineNumber": 45,
    "params": [
      {
        "name": "instance",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 309,
    "kind": "file",
    "name": "saur/routes.js",
    "content": "import { Router } from \"https://deno.land/x/oak/mod.ts\";\nimport RouteSet from \"./routes/route-set.js\";\nimport MissingRouteError from \"./errors/missing-route.js\";\n\n/**\n * Routes are used to collect all routes defined in `RouteSet`s and\n * connect them to the `Oak.Router` that actually does the work of\n * routing requests to their handlers.\n */\nexport default class Routes {\n  constructor(app) {\n    this.app = app;\n    this.router = new Router();\n    this.set = new RouteSet(this.router);\n    this.draw = this.set.draw.bind(this.set);\n  }\n\n  /*\n   * Create the AllowedMethods middleware to insert a header based on\n   * the given routes.\n   */\n  get methods() {\n    return this.router.allowedMethods();\n  }\n\n  /**\n   * Compile all routes into Oak middleware.\n   */\n  get all() {\n    return this.router.routes();\n  }\n\n  /**\n   * Find the first matching route given the controller, action, and\n   * parameters.\n   */\n  resolve(controller, action, params = {}, host = null) {\n    if (typeof controller === \"string\") {\n      return controller;\n    }\n\n    const keys = Object.keys(params);\n    const route = this.set.routes.find(\n      (route) =>\n        route.controller === controller &&\n        route.action === action &&\n        keys.filter((key) => path.match(`:${key}`)).length\n    );\n\n    if (!route) {\n      throw new MissingRouteError(controller, action, params);\n    }\n\n    const path = keys.reduce(\n      (k, p) => p.replace(`:${k}`, params[k]),\n      route.path\n    );\n\n    if (host) {\n      return `${host}/${path}`;\n    }\n\n    return path;\n  }\n\n  forEach(iterator) {\n    return this.set.routes.forEach(iterator);\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/routes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 310,
    "kind": "class",
    "name": "Routes",
    "memberof": "saur/routes.js",
    "static": true,
    "longname": "saur/routes.js~Routes",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/routes.js",
    "importStyle": "Routes",
    "description": "Routes are used to collect all routes defined in `RouteSet`s and\nconnect them to the `Oak.Router` that actually does the work of\nrouting requests to their handlers.",
    "lineNumber": 10,
    "interface": false
  },
  {
    "__docId__": 311,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/routes.js~Routes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes.js~Routes#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true
  },
  {
    "__docId__": 312,
    "kind": "member",
    "name": "app",
    "memberof": "saur/routes.js~Routes",
    "static": false,
    "longname": "saur/routes.js~Routes#app",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 313,
    "kind": "member",
    "name": "router",
    "memberof": "saur/routes.js~Routes",
    "static": false,
    "longname": "saur/routes.js~Routes#router",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 314,
    "kind": "member",
    "name": "set",
    "memberof": "saur/routes.js~Routes",
    "static": false,
    "longname": "saur/routes.js~Routes#set",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "draw",
    "memberof": "saur/routes.js~Routes",
    "static": false,
    "longname": "saur/routes.js~Routes#draw",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 316,
    "kind": "get",
    "name": "methods",
    "memberof": "saur/routes.js~Routes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes.js~Routes#methods",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 317,
    "kind": "get",
    "name": "all",
    "memberof": "saur/routes.js~Routes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes.js~Routes#all",
    "access": "public",
    "description": "Compile all routes into Oak middleware.",
    "lineNumber": 29,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "resolve",
    "memberof": "saur/routes.js~Routes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes.js~Routes#resolve",
    "access": "public",
    "description": "Find the first matching route given the controller, action, and\nparameters.",
    "lineNumber": 37,
    "params": [
      {
        "name": "controller",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      },
      {
        "name": "params",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "host",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "forEach",
    "memberof": "saur/routes.js~Routes",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/routes.js~Routes#forEach",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "undocument": true,
    "params": [
      {
        "name": "iterator",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 320,
    "kind": "file",
    "name": "saur/task.js",
    "content": "// import { walkSync } from \"https://deno.land/std/fs/mod.ts\"\n\n/**\n * Tasks are user-defined subcommands of the `saur` CLI that are active\n * when the user is at the top level of an application directory.\n */\nexport class Task {\n  static get all() {\n    const paths = [];\n\n    // TODO bug in walkSync?\n    // for (const fi of walkSync(\"./tasks\")) {\n    //   paths.push(fi.filename)\n    // }\n\n    return paths.map(async (path) => await import(path));\n  }\n\n  static find(command) {\n    const task = this.all.find((task) => task.name === command);\n\n    if (!task) {\n      throw new Error(`Invalid command \"${command}\"`);\n    }\n\n    return task;\n  }\n\n  constructor({ name, description, perform }) {\n    this.name = name;\n    this.description = description;\n    this.perform = perform;\n  }\n}\n\nexport default function task(name, description, perform) {\n  return new Task({ name, description, perform });\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/task.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 321,
    "kind": "class",
    "name": "Task",
    "memberof": "saur/task.js",
    "static": true,
    "longname": "saur/task.js~Task",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/task.js",
    "importStyle": "{Task}",
    "description": "Tasks are user-defined subcommands of the `saur` CLI that are active\nwhen the user is at the top level of an application directory.",
    "lineNumber": 7,
    "interface": false
  },
  {
    "__docId__": 322,
    "kind": "get",
    "name": "all",
    "memberof": "saur/task.js~Task",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/task.js~Task.all",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "find",
    "memberof": "saur/task.js~Task",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/task.js~Task.find",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "params": [
      {
        "name": "command",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 324,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/task.js~Task#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 325,
    "kind": "member",
    "name": "name",
    "memberof": "saur/task.js~Task",
    "static": false,
    "longname": "saur/task.js~Task#name",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "member",
    "name": "description",
    "memberof": "saur/task.js~Task",
    "static": false,
    "longname": "saur/task.js~Task#description",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "member",
    "name": "perform",
    "memberof": "saur/task.js~Task",
    "static": false,
    "longname": "saur/task.js~Task#perform",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 328,
    "kind": "function",
    "name": "task",
    "memberof": "saur/task.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/task.js~task",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/task.js",
    "importStyle": "task",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "description",
        "types": [
          "*"
        ]
      },
      {
        "name": "perform",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "file",
    "name": "saur/testing.js",
    "content": "/**\n * Wrap `Deno.test` methods in a group for easier organization.\n */\nexport function describe(groupName, callback) {\n  const test = (testName, assertions) =>\n    Deno.test(`${testName}#${groupName}`, assertions);\n\n  return callback({ test });\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/testing.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 330,
    "kind": "function",
    "name": "describe",
    "memberof": "saur/testing.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "saur/testing.js~describe",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/testing.js",
    "importStyle": "{describe}",
    "description": "Wrap `Deno.test` methods in a group for easier organization.",
    "lineNumber": 4,
    "params": [
      {
        "name": "groupName",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 331,
    "kind": "file",
    "name": "saur/view/template.js",
    "content": "/**\n * Template reads and compiles a template to render the response for a\n * View, using the View as context. Templates have a conventional\n * filename, `${path_to_template}.${response_format}.${templating_language}`.\n * A \"users/show\" page for HTML would therefore have a template of\n * `users/show.html.ejs`, while the same route for XML would use the\n * `users/show.xml.ejs` template.\n */\nexport default class Template {\n  constructor(path, layout = App.config.template.layout) {\n    const [name, format, language] = path.split(\".\");\n    this.name = name;\n    this.format = format;\n    this.language = language;\n    this.path = `${App.root}/templates/${name}.${format}.${language}`;\n    this.layout = `${App.root}/templates/layouts/${layout}.${format}.${language}`;\n    this.handlers = App.config.template.handlers;\n  }\n\n  /**\n   * Template handler specified by its extension.\n   */\n  get handler() {\n    return this.handlers[this.language] || this.handlers.txt;\n  }\n\n  /**\n   * Compile this template using the template handler.\n   */\n  compile(path, context) {\n    return this.handler(path, context);\n  }\n\n  /**\n   * Render this template without its outer layout.\n   */\n  partial(view) {\n    return this.compile(this.path, view);\n  }\n\n  /**\n   * Render this template and wrap it in a layout.\n   */\n  async render(view) {\n    const innerHTML = await this.partial(view);\n    const context = { innerHTML, ...view };\n    const outerHTML = await this.compile(this.layout, context);\n\n    return outerHTML;\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/view/template.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 332,
    "kind": "class",
    "name": "Template",
    "memberof": "saur/view/template.js",
    "static": true,
    "longname": "saur/view/template.js~Template",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/view/template.js",
    "importStyle": "Template",
    "description": "Template reads and compiles a template to render the response for a\nView, using the View as context. Templates have a conventional\nfilename, `${path_to_template}.${response_format}.${templating_language}`.\nA \"users/show\" page for HTML would therefore have a template of\n`users/show.html.ejs`, while the same route for XML would use the\n`users/show.xml.ejs` template.",
    "lineNumber": 9,
    "interface": false
  },
  {
    "__docId__": 333,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/view/template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view/template.js~Template#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 334,
    "kind": "member",
    "name": "name",
    "memberof": "saur/view/template.js~Template",
    "static": false,
    "longname": "saur/view/template.js~Template#name",
    "access": "public",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 335,
    "kind": "member",
    "name": "format",
    "memberof": "saur/view/template.js~Template",
    "static": false,
    "longname": "saur/view/template.js~Template#format",
    "access": "public",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 336,
    "kind": "member",
    "name": "language",
    "memberof": "saur/view/template.js~Template",
    "static": false,
    "longname": "saur/view/template.js~Template#language",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 337,
    "kind": "member",
    "name": "path",
    "memberof": "saur/view/template.js~Template",
    "static": false,
    "longname": "saur/view/template.js~Template#path",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 338,
    "kind": "member",
    "name": "layout",
    "memberof": "saur/view/template.js~Template",
    "static": false,
    "longname": "saur/view/template.js~Template#layout",
    "access": "public",
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 339,
    "kind": "member",
    "name": "handlers",
    "memberof": "saur/view/template.js~Template",
    "static": false,
    "longname": "saur/view/template.js~Template#handlers",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 340,
    "kind": "get",
    "name": "handler",
    "memberof": "saur/view/template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view/template.js~Template#handler",
    "access": "public",
    "description": "Template handler specified by its extension.",
    "lineNumber": 23,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "compile",
    "memberof": "saur/view/template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view/template.js~Template#compile",
    "access": "public",
    "description": "Compile this template using the template handler.",
    "lineNumber": 30,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "partial",
    "memberof": "saur/view/template.js~Template",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view/template.js~Template#partial",
    "access": "public",
    "description": "Render this template without its outer layout.",
    "lineNumber": 37,
    "params": [
      {
        "name": "view",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "render",
    "memberof": "saur/view/template.js~Template",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "saur/view/template.js~Template#render",
    "access": "public",
    "description": "Render this template and wrap it in a layout.",
    "lineNumber": 44,
    "params": [
      {
        "name": "view",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 344,
    "kind": "file",
    "name": "saur/view.js",
    "content": "import Template from \"./view/template.js\";\nimport reduce from \"https://deno.land/x/lodash/reduce.js\";\n\nexport default class View {\n  static template = null;\n\n  constructor(controller, context = {}) {\n    this.context = context;\n    this.controller = controller;\n    this.request = controller.request;\n    this.template = new Template(\n      this.constructor.template,\n      this.controller.layout\n    );\n    this.urlFor = App.routes.resolve.bind(App.routes);\n\n    App.routes.forEach((route) => route.hydrate(this));\n    this.initialize();\n  }\n\n  initialize() {}\n\n  cache(key, options = {}, fresh) {\n    return App.cache.fetch(key, options, fresh);\n  }\n\n  /**\n   * Render the given View's template as a partial within this View,\n   * using this View as context. You can also pass in other context as\n   * the last argument to this method.\n   */\n  async render(View, context = {}) {\n    const view = new View(this, { ...this.context, ...context });\n    const result = await view.template.partial(view);\n\n    App.log.info(`Rendering partial ${view.template.path}`);\n\n    return result.toString();\n  }\n\n  /**\n   * Render a hash of options as HTML attributes.\n   */\n  htmlAttributes(options = {}, prefix = null) {\n    return reduce(\n      options,\n      (value, option, memo) => {\n        if (typeof value === \"object\") {\n          value = this.htmlAttributes(value, option);\n        }\n\n        if (prefix) {\n          option = `${prefix}-${option}`;\n        }\n\n        return `${memo} ${option}=\"${value}\"`;\n      },\n      \"\"\n    );\n  }\n\n  /**\n   * Render a `<form>` tag and hidden fields to verify authenticity\n   * token and make PATCH/PUT/DELETE requests.\n   */\n  formTag({ action, method, ...options }) {\n    const attributes = this.htmlAttributes(options);\n    const token = App.authenticityToken;\n\n    if (method === \"GET\" && method === \"POST\") {\n      return `<form action=\"${action}\" method=\"${method}\" ${attributes}>`;\n    }\n\n    return `<form action=\"${action}\" method=\"POST\" ${attributes}>\n    <input type=\"hidden\" name=\"_method\" value=\"${method}\" />\n    <input type=\"hidden\" name=\"authenticity_token\" value=\"${token}\" />\n    `;\n  }\n\n  formFor({ model = null, action = null, method = null, ...options }) {\n    action = model ? this.urlFor(model) : action;\n    method = method || (model && model.persisted ? \"PATCH\" : \"POST\");\n\n    return this.formTag({ action, method, ...options });\n  }\n\n  /**\n   * Render an `<a>` tag pointing to a specific route. You can use\n   * `urlFor` syntax or a route helper in the `href` argument.\n   */\n  linkTo(text, href, options) {\n    const attributes = this.htmlAttributes(options);\n    const url = this.urlFor(href);\n\n    return `<a href=\"${url}\" ${attributes}>${text}</a>`;\n  }\n\n  get csrfMetaTag() {\n    const token = App.authenticityToken;\n\n    return `<meta name=\"authenticity_token\" content=\"${token}\" />`;\n  }\n\n  get endFormTag() {\n    return \"</form>\";\n  }\n}\n",
    "static": true,
    "longname": "/Users/tscott/Code/saur/view.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 345,
    "kind": "class",
    "name": "View",
    "memberof": "saur/view.js",
    "static": true,
    "longname": "saur/view.js~View",
    "access": "public",
    "export": true,
    "importPath": "saur/saur/view.js",
    "importStyle": "View",
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 346,
    "kind": "member",
    "name": "template",
    "memberof": "saur/view.js~View",
    "static": true,
    "longname": "saur/view.js~View.template",
    "access": "public",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "saur/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view.js~View#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 348,
    "kind": "member",
    "name": "context",
    "memberof": "saur/view.js~View",
    "static": false,
    "longname": "saur/view.js~View#context",
    "access": "public",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 349,
    "kind": "member",
    "name": "controller",
    "memberof": "saur/view.js~View",
    "static": false,
    "longname": "saur/view.js~View#controller",
    "access": "public",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 350,
    "kind": "member",
    "name": "request",
    "memberof": "saur/view.js~View",
    "static": false,
    "longname": "saur/view.js~View#request",
    "access": "public",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "member",
    "name": "template",
    "memberof": "saur/view.js~View",
    "static": false,
    "longname": "saur/view.js~View#template",
    "access": "public",
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 352,
    "kind": "member",
    "name": "urlFor",
    "memberof": "saur/view.js~View",
    "static": false,
    "longname": "saur/view.js~View#urlFor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "initialize",
    "memberof": "saur/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view.js~View#initialize",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "cache",
    "memberof": "saur/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view.js~View#cache",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "fresh",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 355,
    "kind": "method",
    "name": "render",
    "memberof": "saur/view.js~View",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "saur/view.js~View#render",
    "access": "public",
    "description": "Render the given View's template as a partial within this View,\nusing this View as context. You can also pass in other context as\nthe last argument to this method.",
    "lineNumber": 32,
    "params": [
      {
        "name": "View",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 356,
    "kind": "method",
    "name": "htmlAttributes",
    "memberof": "saur/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view.js~View#htmlAttributes",
    "access": "public",
    "description": "Render a hash of options as HTML attributes.",
    "lineNumber": 44,
    "params": [
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "prefix",
        "optional": true,
        "types": [
          "undefined"
        ],
        "defaultValue": "undefined"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "formTag",
    "memberof": "saur/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view.js~View#formTag",
    "access": "public",
    "description": "Render a `<form>` tag and hidden fields to verify authenticity\ntoken and make PATCH/PUT/DELETE requests.",
    "lineNumber": 66,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"action\": *, \"method\": *, ...options: Object}"
        ],
        "defaultRaw": {
          "action": null,
          "method": null,
          "options": {}
        },
        "defaultValue": "{\"action\":null,\"method\":null,\"options\":{}}"
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 358,
    "kind": "method",
    "name": "formFor",
    "memberof": "saur/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view.js~View#formFor",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [
      {
        "name": "objectPattern",
        "types": [
          "{\"model\": *, \"action\": *, \"method\": *, ...options: Object}"
        ],
        "defaultRaw": {
          "model": null,
          "action": null,
          "method": null,
          "options": {}
        },
        "defaultValue": "{\"model\":null,\"action\":null,\"method\":null,\"options\":{}}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 359,
    "kind": "method",
    "name": "linkTo",
    "memberof": "saur/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view.js~View#linkTo",
    "access": "public",
    "description": "Render an `<a>` tag pointing to a specific route. You can use\n`urlFor` syntax or a route helper in the `href` argument.",
    "lineNumber": 91,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      },
      {
        "name": "href",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 360,
    "kind": "get",
    "name": "csrfMetaTag",
    "memberof": "saur/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view.js~View#csrfMetaTag",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "get",
    "name": "endFormTag",
    "memberof": "saur/view.js~View",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "saur/view.js~View#endFormTag",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# Deno Saur\n\nA rapid development web framework for [deno][].\n\n## Features\n\n* Model-View-Controller Architecture\n* Supports multiple SQL database backends\n* Built-in caching\n* Routing DSL\n\n## Installation\n\nInstall the CLI with `deno install`:\n\n    deno install --allow-run --allow-write saur https://deno.land/x/saur/cli.js\n\nThen create your app using the `new` command:\n\n    saur new my-app\n    cd my-app\n\nYou'll get an **index.js** file to start out.\n\nGenerate code by running the `generate` command:\n\n    saur generate controller home\n\nAnd start the server by running:\n\n    saur server\n\nYou can also run tests:\n\n    deno test\n\n## Usage\n\nSaur is strucutured similarly to other \"Web MVC\" frameworks like\n[Django][] and [Ruby on Rails][]. Each object in your application\nrepresents a different role that's played:\n\n- **Controllers** are used to respond to requests from the main\n  application router. After parsing the URL, a new instance of the\n  Controller is created to fulfill the request. Controllers come\n  pre-packed with abstractions meant to help you in this effort.\n- **Models** encapsulate the database logic with an Object-Relational\n  Mapper, pre-populating your model objects with the data from the\n  database and validating input before it's persisted.\n- **Views** are objects used to render templates within a given context.\n  Similar to helpers and presenters in Rails, you can define View\n  methods and have them automatically appear in the rendered template.\n- **Templates** are [EJS][] files that live in `./templates`, and\n  populated with a `View` object as context when they are rendered from\n  file.\n\n### Quick Start: Hello World\n\nCreate a new application:\n\n    saur new hello\n    cd hello\n\nGenerate the controller and action:\n\n    saur generate application index\n\nEdit **templates/application/hello.html.ejs**:\n\n```html\n<h1>hello world</h1>\n```\n\nOpen **index.js** and add your route:\n\n```javascript\nimport Application from \"https://deno.land/x/saur/application.js\"\nimport ApplicationController from \"./controllers/application\"\n\nconst App = new Application({\n  // enter your config settings here\n})\n\nApp.routes.draw(({ root }) => {\n  root(\"index\", ApplicationController)\n})\n\nexport default App\n```\n\nStart the server, and browse to <http://localhost:3000>\n\n    saur server\n\nYou should see a big ol' \"Hello World!\"\n\n### Models\n\nModels are structured very similar to ActiveRecord. Here's an example of\nwhat a `User` model might look like:\n\n```javascript\nimport Model, { validates, validate } from \"https://deno.land/x/saur/model.js\"\n\nexport default class User extends Model {\n  static table = \"users\"\n  static validations = [\n    validates(\"name\", { presence: true })\n    validates(\"password\", { presence: true })\n    validate(\"nameNotFoo\")\n  ]\n\n  nameNotFoo() {\n    if (this.name === \"foo\") {\n      this.errors.add(\"name\", \"cannot be 'foo'\")\n    }\n  }\n}\n```\n\nYou can find a model by its ID like so;\n\n```javascript\nconst user = User.find(1)\n```\n\nOr, find it by any other property:\n\n```javascript\nconst userByName = User.findBy({ name: \"bar\" })\n```\n\nUsing [SQL Builder][] under the hood, you can chain query fragments\ntogether to construct a query based on the given data. Saur wraps the\nSQL Builder's `Query` object, lazy-loading the data you need when you\nask for it. For example, the following query won't be run immediately:\n\n```javascript\nconst users = User.where({ name: \"bar\" })\n\nusers.limit(10)\n```\n\nOnly when the data is actually needed, like iteration methods, will it be run:\n\n```javascript\nconst names = users.map(user => user.name) // => [\"bar\"]\n```\n\nThis doesn't apply for `find` or `findBy`, since those need to return a\nfull model object, and thus the query will run when called in order to\ngive you immediate feedback.\n\n### Controllers\n\nThe controller layer is used for parsing requests and rendering\nresponses. It's the abstraction between the router/server and your\napplication code. Controllers are primarily used to query the database\nand render Views to display that data in a certain way, depending on the\nrequested format.\n\nHere's what a controller for the `User` model might look like:\n\n```javascript\nimport Controller from \"https://deno.land/x/saur/controlller.js\";\nimport UserView from \"../views/user.js\";\n\nexport default UsersController extends Controller {\n  show({ id }) {\n    const user = User.find(id);\n\n    this.render(UserView, { user });\n  }\n}\n```\n\n### Views and Templates\n\nView objects are used to encapsulate template rendering and data\npresentation. Separating the concerns of the \"presentation\" and \"data\"\nlayers, Views take the form of a \"presenter\" from other applications,\nbut are coupled to a particular template that it is responsible for\nrendering. As such, a view will need to be made alongside a\ncorresponding template for each response you wish to create. Here's an\nexample of what the `UserView` might look like from before:\n\n```javascript\nimport View from \"https://deno.land/x/saur/view.js\";\n\nexport default UserView extends View {\n  static template = \"user.ejs\";\n\n  get title() {\n    const { user: { name } } = this.context\n\n    return `@${name}'s Profile`\n  }\n}\n```\n\nAnd your `user.ejs` template:\n\n```html\n<article class=\"user\">\n  <header>\n    <h1><%= title %></h1>\n  </header>\n</article>\n```\n\nAlthough views need a template in order to render, templates can be\nreused between views given the right kind of context. The markup in\n`user.ejs`, for example, can be reused by another template like\n`users.ejs` when it comes time to render a partial:\n\n```html\n<ul class=\"users\">\n<% users.forEach(user => { %>\n  <li><%= include(\"user.ejs\", { user, title: user.name }) %></li>\n<% }) %>\n</ul>\n```\n\nThe partial is rendered without the `UserView` context. To supply a\ndifferent view context, you can also render the partial from the view\nclass itself:\n\n```javascript\nimport View from \"https://deno.land/x/saur/view.js\";\n\nexport default UsersView extends View {\n  static template = \"users.ejs\";\n\n  get users() {\n    return this.context.users.map(user => this.render(UserView, { user })\n  }\n\n  get title() {\n    const { user: { name } } = this.context\n\n    return `@${name}'s Profile`\n  }\n}\n```\n\nThe template can be cleaned up like so:\n\n```html\n<ul class=\"users\">\n  <%= users %>\n</ul>\n```\n\nAdditionally, views are not coupled to controllers. They can be used in\nmailers as well:\n\n```javascript\nimport Mailer from \"https://deno.land/x/saur/mailer.js\"\n\nexport default class UserMailer extends Mailer {\n  confirmation(user) {\n    const title = \"Click here to confirm your account\"\n    this.render(UserView, { user })\n  }\n}\n```\n\n### Caching\n\nA caching layer is also built in, with support for \"russian-doll\"\nstrategies in the view:\n\n```\n<article>\n  <%= cache(`users/${user.id}`, () => { %>\n    <header>\n      <h1><%= user.name %></h1>\n    </header>\n    <main>\n      <%= cache(`users/${user.id}/posts`, () => { %>\n        <% user.posts.forEach(post => { %>\n          <p><%= post.title %></p>\n        <% }) %>\n      <%= }) %>\n    </main>\n  <%= }) %>\n</article>\n```\n\nThis `cache` method is provided in the `View` for your convenience, but\nyou can access the app cache directly using `App.cache`. The method used\nin the `cache` helper is `App.cache.fetch`, and is notable because it\nfirst checks if a key is available and uses the cache if so, otherwise\nit will call the provided \"fresh\" method and save that value as the\ncache.\n\n## Development\n\nTo build documentation, you'll need [ESDoc][] and plugins installed:\n\n    yarn global add esdoc esdoc-ecmascript-proposal-plugin esdoc-standard-plugin\n\nThen, run:\n\n    make\n\nThis will also generate a `bin/saur` binstub so you can run CLI\ncommands.\n\nBefore submitting your code, make sure it's formatted:\n\n    make fmt\n\n[deno]: https://deno.land\n[SQL Builder]: https://github.com/manyuanrong/sql-builder\n[Django]: https://djangoproject.com\n[Ruby on Rails]: https://rubyonrails.org\n",
    "longname": "/Users/tscott/Code/saur/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"devDependencies\": {\n    \"babel-eslint\": \"^10.1.0\",\n    \"eslint\": \"^6.8.0\",\n    \"eslint-plugin-prettier\": \"^3.1.3\",\n    \"prettier\": \"^2.0.4\",\n    \"webpack\": \"^4.42.1\"\n  },\n  \"name\": \"saur\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"repository\": \"git@github.com:tubbo/saur.git\",\n  \"author\": \"Tom Scott <tscott@weblinc.com>\",\n  \"license\": \"MIT\",\n  \"private\": true\n}\n",
    "longname": "/Users/tscott/Code/saur/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]